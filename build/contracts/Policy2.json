{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_restricted_interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "AccessApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "AccessDenied",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorities",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        }
      ],
      "name": "checkPolicy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Policy2.PolicyState",
          "name": "_policyState",
          "type": "uint8"
        }
      ],
      "name": "setPolicyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "contracts/Policies/Policy2.sol"
  },
  "ast": {
    "absolutePath": "contracts/Policies/Policy2.sol",
    "exportedSymbols": {
      "Policy2": [
        2021
      ]
    },
    "id": 2022,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1902,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:24:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Policy2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2021,
        "linearizedBaseContracts": [
          2021
        ],
        "name": "Policy2",
        "nameLocation": "75:7:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Policy2.PolicyState",
            "id": 1905,
            "members": [
              {
                "id": 1903,
                "name": "Active",
                "nameLocation": "109:6:4",
                "nodeType": "EnumValue",
                "src": "109:6:4"
              },
              {
                "id": 1904,
                "name": "Deactivated",
                "nameLocation": "117:11:4",
                "nodeType": "EnumValue",
                "src": "117:11:4"
              }
            ],
            "name": "PolicyState",
            "nameLocation": "96:11:4",
            "nodeType": "EnumDefinition",
            "src": "91:38:4"
          },
          {
            "constant": false,
            "functionSelector": "91223d69",
            "id": 1909,
            "mutability": "mutable",
            "name": "authorities",
            "nameLocation": "169:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "137:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1908,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1906,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "145:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "137:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1907,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "156:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1912,
            "mutability": "mutable",
            "name": "policyState",
            "nameLocation": "219:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "207:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PolicyState_$1905",
              "typeString": "enum Policy2.PolicyState"
            },
            "typeName": {
              "id": 1911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1910,
                "name": "PolicyState",
                "nameLocations": [
                  "207:11:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1905,
                "src": "207:11:4"
              },
              "referencedDeclaration": 1905,
              "src": "207:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PolicyState_$1905",
                "typeString": "enum Policy2.PolicyState"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1914,
            "mutability": "mutable",
            "name": "presentTime",
            "nameLocation": "242:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "237:16:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1913,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "237:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1916,
            "mutability": "mutable",
            "name": "restricted_interval",
            "nameLocation": "265:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "260:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1915,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "260:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "fa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f3",
            "id": 1920,
            "name": "AccessDenied",
            "nameLocation": "312:12:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1918,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "333:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1920,
                  "src": "326:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1917,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "324:17:4"
            },
            "src": "306:36:4"
          },
          {
            "anonymous": false,
            "eventSelector": "50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae",
            "id": 1924,
            "name": "AccessApproved",
            "nameLocation": "354:14:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1922,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "377:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1924,
                  "src": "370:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1921,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "368:17:4"
            },
            "src": "348:38:4"
          },
          {
            "body": {
              "id": 1937,
              "nodeType": "Block",
              "src": "437:102:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1927,
                            "name": "authorities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "456:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1930,
                          "indexExpression": {
                            "expression": {
                              "id": 1928,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "468:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "472:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "468:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "456:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "483:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "456:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616e20617574686f726974792e",
                        "id": 1933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "489:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_163f4de8b69521479251ff5c78e4858f62ef471f12abb64a835e0a68fc65d99c",
                          "typeString": "literal_string \"Sender is not an authority.\""
                        },
                        "value": "Sender is not an authority."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_163f4de8b69521479251ff5c78e4858f62ef471f12abb64a835e0a68fc65d99c",
                          "typeString": "literal_string \"Sender is not an authority.\""
                        }
                      ],
                      "id": 1926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "448:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1935,
                  "nodeType": "ExpressionStatement",
                  "src": "448:71:4"
                },
                {
                  "id": 1936,
                  "nodeType": "PlaceholderStatement",
                  "src": "530:1:4"
                }
              ]
            },
            "id": 1938,
            "name": "authorities_only",
            "nameLocation": "419:16:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:4"
            },
            "src": "410:129:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1949,
              "nodeType": "Block",
              "src": "570:98:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyState_$1905",
                          "typeString": "enum Policy2.PolicyState"
                        },
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1941,
                          "name": "policyState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1912,
                          "src": "589:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyState_$1905",
                            "typeString": "enum Policy2.PolicyState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1942,
                            "name": "PolicyState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "604:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyState_$1905_$",
                              "typeString": "type(enum Policy2.PolicyState)"
                            }
                          },
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "616:6:4",
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1903,
                          "src": "604:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyState_$1905",
                            "typeString": "enum Policy2.PolicyState"
                          }
                        },
                        "src": "589:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c69637932206973206e6f7420416374697665",
                        "id": 1945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "624:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_818f423834189c1647a02c6f0250986a7ac43e154bab80a340eae98c95aa96bd",
                          "typeString": "literal_string \"Policy2 is not Active\""
                        },
                        "value": "Policy2 is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_818f423834189c1647a02c6f0250986a7ac43e154bab80a340eae98c95aa96bd",
                          "typeString": "literal_string \"Policy2 is not Active\""
                        }
                      ],
                      "id": 1940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "581:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "581:67:4"
                },
                {
                  "id": 1948,
                  "nodeType": "PlaceholderStatement",
                  "src": "659:1:4"
                }
              ]
            },
            "id": 1950,
            "name": "onlyWhenActive",
            "nameLocation": "554:14:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:2:4"
            },
            "src": "545:123:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1971,
              "nodeType": "Block",
              "src": "732:147:4",
              "statements": [
                {
                  "expression": {
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1955,
                      "name": "policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "743:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$1905",
                        "typeString": "enum Policy2.PolicyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1956,
                        "name": "PolicyState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "757:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyState_$1905_$",
                          "typeString": "type(enum Policy2.PolicyState)"
                        }
                      },
                      "id": 1957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "769:6:4",
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1903,
                      "src": "757:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$1905",
                        "typeString": "enum Policy2.PolicyState"
                      }
                    },
                    "src": "743:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$1905",
                      "typeString": "enum Policy2.PolicyState"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "743:32:4"
                },
                {
                  "expression": {
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1960,
                      "name": "restricted_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1916,
                      "src": "786:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1961,
                      "name": "_restricted_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "808:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "786:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1963,
                  "nodeType": "ExpressionStatement",
                  "src": "786:42:4"
                },
                {
                  "expression": {
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1964,
                        "name": "authorities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1909,
                        "src": "839:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1967,
                      "indexExpression": {
                        "expression": {
                          "id": 1965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "851:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "855:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "851:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "839:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "865:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "839:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "839:30:4"
                }
              ]
            },
            "id": 1972,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "_restricted_interval",
                  "nameLocation": "711:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1972,
                  "src": "706:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "704:28:4"
            },
            "returnParameters": {
              "id": 1954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:4"
            },
            "scope": 2021,
            "src": "693:186:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1984,
              "nodeType": "Block",
              "src": "962:45:4",
              "statements": [
                {
                  "expression": {
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1980,
                      "name": "policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "973:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$1905",
                        "typeString": "enum Policy2.PolicyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1981,
                      "name": "_policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1975,
                      "src": "987:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$1905",
                        "typeString": "enum Policy2.PolicyState"
                      }
                    },
                    "src": "973:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$1905",
                      "typeString": "enum Policy2.PolicyState"
                    }
                  },
                  "id": 1983,
                  "nodeType": "ExpressionStatement",
                  "src": "973:26:4"
                }
              ]
            },
            "functionSelector": "3bd31ccd",
            "id": 1985,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1978,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1977,
                  "name": "authorities_only",
                  "nameLocations": [
                    "944:16:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "944:16:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "944:18:4"
              }
            ],
            "name": "setPolicyState",
            "nameLocation": "896:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "_policyState",
                  "nameLocation": "923:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "911:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PolicyState_$1905",
                    "typeString": "enum Policy2.PolicyState"
                  },
                  "typeName": {
                    "id": 1974,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1973,
                      "name": "PolicyState",
                      "nameLocations": [
                        "911:11:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1905,
                      "src": "911:11:4"
                    },
                    "referencedDeclaration": 1905,
                    "src": "911:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$1905",
                      "typeString": "enum Policy2.PolicyState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:26:4"
            },
            "returnParameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:0:4"
            },
            "scope": 2021,
            "src": "887:120:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2019,
              "nodeType": "Block",
              "src": "1095:338:4",
              "statements": [
                {
                  "expression": {
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1994,
                      "name": "presentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "1106:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1995,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1120:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1126:9:4",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1120:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1106:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:29:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1999,
                        "name": "presentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "1150:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2000,
                        "name": "lastUpdated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "1164:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1150:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 2002,
                      "name": "restricted_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1916,
                      "src": "1178:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1150:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2017,
                    "nodeType": "Block",
                    "src": "1323:103:4",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "54696d6520496e74657276616c207265737472696374696f6e2121",
                              "id": 2012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1357:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_071bfeab4bd4eb9fda39cedcbc6dc3fe00cc4804d7f4737023da9c5c2dcfa7b1",
                                "typeString": "literal_string \"Time Interval restriction!!\""
                              },
                              "value": "Time Interval restriction!!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_071bfeab4bd4eb9fda39cedcbc6dc3fe00cc4804d7f4737023da9c5c2dcfa7b1",
                                "typeString": "literal_string \"Time Interval restriction!!\""
                              }
                            ],
                            "id": 2011,
                            "name": "AccessDenied",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "1343:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 2013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1343:44:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2014,
                        "nodeType": "EmitStatement",
                        "src": "1338:49:4"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 2015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1409:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1993,
                        "id": 2016,
                        "nodeType": "Return",
                        "src": "1402:12:4"
                      }
                    ]
                  },
                  "id": 2018,
                  "nodeType": "IfStatement",
                  "src": "1146:280:4",
                  "trueBody": {
                    "id": 2010,
                    "nodeType": "Block",
                    "src": "1199:110:4",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "54696d6520496e74657276616c207265737472696374696f6e2070617373656421",
                              "id": 2005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1235:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_549220aab952fd6c11e81ff293ac0c2361ed34b624ee1fe1828f5d56df3e6bb3",
                                "typeString": "literal_string \"Time Interval restriction passed!\""
                              },
                              "value": "Time Interval restriction passed!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_549220aab952fd6c11e81ff293ac0c2361ed34b624ee1fe1828f5d56df3e6bb3",
                                "typeString": "literal_string \"Time Interval restriction passed!\""
                              }
                            ],
                            "id": 2004,
                            "name": "AccessApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1924,
                            "src": "1219:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1219:52:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2007,
                        "nodeType": "EmitStatement",
                        "src": "1214:57:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1293:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1993,
                        "id": 2009,
                        "nodeType": "Return",
                        "src": "1286:11:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "aca6bef7",
            "id": 2020,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1990,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1989,
                  "name": "onlyWhenActive",
                  "nameLocations": [
                    "1064:14:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1950,
                  "src": "1064:14:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1064:16:4"
              }
            ],
            "name": "checkPolicy",
            "nameLocation": "1024:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "lastUpdated",
                  "nameLocation": "1045:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "1036:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:22:4"
            },
            "returnParameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1992,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "1090:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1991,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:6:4"
            },
            "scope": 2021,
            "src": "1015:418:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2022,
        "src": "66:1370:4",
        "usedErrors": [],
        "usedEvents": [
          1920,
          1924
        ]
      }
    ],
    "src": "40:1396:4"
  },
  "bytecode": "6080604052348015600f57600080fd5b506040516103f13803806103f1833981016040819052602c916059565b6001805460ff19908116825560039290925533600090815260208190526040902080549092161790556071565b600060208284031215606a57600080fd5b5051919050565b610371806100806000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633bd31ccd1461004657806391223d691461005b578063aca6bef714610092575b600080fd5b610059610054366004610294565b6100a5565b005b61007e6100693660046102bc565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b61007e6100a03660046102e5565b610133565b3360009081526020819052604090205460ff16151560011461010e5760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206973206e6f7420616e20617574686f726974792e000000000060448201526064015b60405180910390fd5b6001805482919060ff191681838181111561012b5761012b6102fe565b021790555050565b6000806001805460ff169081111561014d5761014d6102fe565b146101925760405162461bcd60e51b8152602060048201526015602482015274506f6c69637932206973206e6f742041637469766560581b6044820152606401610105565b426002819055600354906101a7908490610314565b10610225577f50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae6040516102159060208082526021908201527f54696d6520496e74657276616c207265737472696374696f6e207061737365646040820152602160f81b606082015260800190565b60405180910390a1506001919050565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f3604051610284906020808252601b908201527f54696d6520496e74657276616c207265737472696374696f6e21210000000000604082015260600190565b60405180910390a1506000919050565b6000602082840312156102a657600080fd5b8135600281106102b557600080fd5b9392505050565b6000602082840312156102ce57600080fd5b81356001600160a01b03811681146102b557600080fd5b6000602082840312156102f757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561033557634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209874c9174a27caa0fb75e6809c7c7bf783d7ba04e7fb06654e26a2751a5f2c0464736f6c634300081a0033",
  "bytecodeSha1": "ea73766a86f36610543d213f21b0a281b06d690f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.26+commit.8a97fa7a"
  },
  "contractName": "Policy2",
  "coverageMap": {
    "branches": {
      "4": {
        "Policy2.checkPolicy": {
          "6": [
            589,
            622,
            true
          ],
          "7": [
            1150,
            1197,
            false
          ]
        }
      }
    },
    "statements": {
      "4": {
        "Policy2.checkPolicy": {
          "1": [
            1106,
            1135
          ],
          "2": [
            1214,
            1271
          ],
          "3": [
            1286,
            1297
          ],
          "4": [
            1338,
            1387
          ],
          "5": [
            1402,
            1414
          ]
        },
        "Policy2.setPolicyState": {
          "0": [
            973,
            999
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633bd31ccd1461004657806391223d691461005b578063aca6bef714610092575b600080fd5b610059610054366004610294565b6100a5565b005b61007e6100693660046102bc565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b61007e6100a03660046102e5565b610133565b3360009081526020819052604090205460ff16151560011461010e5760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206973206e6f7420616e20617574686f726974792e000000000060448201526064015b60405180910390fd5b6001805482919060ff191681838181111561012b5761012b6102fe565b021790555050565b6000806001805460ff169081111561014d5761014d6102fe565b146101925760405162461bcd60e51b8152602060048201526015602482015274506f6c69637932206973206e6f742041637469766560581b6044820152606401610105565b426002819055600354906101a7908490610314565b10610225577f50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae6040516102159060208082526021908201527f54696d6520496e74657276616c207265737472696374696f6e207061737365646040820152602160f81b606082015260800190565b60405180910390a1506001919050565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f3604051610284906020808252601b908201527f54696d6520496e74657276616c207265737472696374696f6e21210000000000604082015260600190565b60405180910390a1506000919050565b6000602082840312156102a657600080fd5b8135600281106102b557600080fd5b9392505050565b6000602082840312156102ce57600080fd5b81356001600160a01b03811681146102b557600080fd5b6000602082840312156102f757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8181038181111561033557634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209874c9174a27caa0fb75e6809c7c7bf783d7ba04e7fb06654e26a2751a5f2c0464736f6c634300081a0033",
  "deployedSourceMap": "66:1370:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:120;;;;;;:::i;:::-;;:::i;:::-;;137:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;747:14:10;;740:22;722:41;;710:2;695:18;137:43:4;;;;;;;1015:418;;;;;;:::i;:::-;;:::i;887:120::-;468:10;456:11;:23;;;;;;;;;;;;;:31;;:23;:31;448:71;;;;-1:-1:-1;;;448:71:4;;1161:2:10;448:71:4;;;1143:21:10;1200:2;1180:18;;;1173:30;1239:29;1219:18;;;1212:57;1286:18;;448:71:4;;;;;;;;;973:11:::1;:26:::0;;987:12;;973:11;-1:-1:-1;;973:26:4::1;:11:::0;987:12;973:26;;::::1;;;;;;:::i;:::-;;;;;;887:120:::0;:::o;1015:418::-;1090:4;;589:11;;;;;;:33;;;;;;;:::i;:::-;;581:67;;;;-1:-1:-1;;;581:67:4;;1649:2:10;581:67:4;;;1631:21:10;1688:2;1668:18;;;1661:30;-1:-1:-1;;;1707:18:10;;;1700:51;1768:18;;581:67:4;1447:345:10;581:67:4;1120:15:::1;1106:11;:29:::0;;;1178:19:::1;::::0;;1150:25:::1;::::0;1164:11;;1150:25:::1;:::i;:::-;:47;1146:280;;1219:52;;;;;2229:2:10::0;2211:21;;;2268:2;2248:18;;;2241:30;2307:34;2302:2;2287:18;;2280:62;-1:-1:-1;;;2373:2:10;2358:18;;2351:31;2414:3;2399:19;;2027:397;1219:52:4::1;;;;;;;;-1:-1:-1::0;1293:4:4::1;1015:418:::0;;;:::o;1146:280::-:1;1343:44;;;;;2631:2:10::0;2613:21;;;2670:2;2650:18;;;2643:30;2709:29;2704:2;2689:18;;2682:57;2771:2;2756:18;;2429:351;1343:44:4::1;;;;;;;;-1:-1:-1::0;1409:5:4::1;1015:418:::0;;;:::o;14:272:10:-;89:6;142:2;130:9;121:7;117:23;113:32;110:52;;;158:1;155;148:12;110:52;197:9;184:23;236:1;229:5;226:12;216:40;;252:1;249;242:12;216:40;275:5;14:272;-1:-1:-1;;;14:272:10:o;291:286::-;350:6;403:2;391:9;382:7;378:23;374:32;371:52;;;419:1;416;409:12;371:52;445:23;;-1:-1:-1;;;;;497:31:10;;487:42;;477:70;;543:1;540;533:12;774:180;833:6;886:2;874:9;865:7;861:23;857:32;854:52;;;902:1;899;892:12;854:52;-1:-1:-1;925:23:10;;774:180;-1:-1:-1;774:180:10:o;1315:127::-;1376:10;1371:3;1367:20;1364:1;1357:31;1407:4;1404:1;1397:15;1431:4;1428:1;1421:15;1797:225;1864:9;;;1885:11;;;1882:134;;;1938:10;1933:3;1929:20;1926:1;1919:31;1973:4;1970:1;1963:15;2001:4;1998:1;1991:15;1882:134;1797:225;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    66,
    1436
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BD31CCD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x91223D69 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xACA6BEF7 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x294 JUMP JUMPDEST PUSH2 0xA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x133 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x10E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420616E20617574686F726974792E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP2 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12B PUSH2 0x2FE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x14D JUMPI PUSH2 0x14D PUSH2 0x2FE JUMP JUMPDEST EQ PUSH2 0x192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506F6C69637932206973206E6F7420416374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x105 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 PUSH2 0x1A7 SWAP1 DUP5 SWAP1 PUSH2 0x314 JUMP JUMPDEST LT PUSH2 0x225 JUMPI PUSH32 0x50E8D46DCB719FFEAE31CDB40141820A1744374032E7A478588D9300A568FBAE PUSH1 0x40 MLOAD PUSH2 0x215 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x54696D6520496E74657276616C207265737472696374696F6E20706173736564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3 PUSH1 0x40 MLOAD PUSH2 0x284 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x54696D6520496E74657276616C207265737472696374696F6E21210000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x335 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PUSH21 0xC9174A27CAA0FB75E6809C7C7BF783D7BA04E7FB06 PUSH6 0x4E26A2751A5F 0x2C DIV PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        66,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3BD31CCD"
    },
    "38": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "EQ",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x91223D69"
    },
    "49": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xACA6BEF7"
    },
    "60": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x92"
    },
    "64": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        66,
        1436
      ],
      "op": "REVERT",
      "path": "4"
    },
    "70": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "71": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "74": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x54"
    },
    "77": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "78": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "80": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x294"
    },
    "83": {
      "fn": "Policy2.setPolicyState",
      "jump": "i",
      "offset": [
        887,
        1007
      ],
      "op": "JUMP",
      "path": "4"
    },
    "84": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "85": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA5"
    },
    "88": {
      "fn": "Policy2.setPolicyState",
      "jump": "i",
      "offset": [
        887,
        1007
      ],
      "op": "JUMP",
      "path": "4"
    },
    "89": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "STOP",
      "path": "4"
    },
    "91": {
      "offset": [
        137,
        180
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "92": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E"
    },
    "95": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x69"
    },
    "98": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "99": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "101": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BC"
    },
    "104": {
      "fn": "Policy2.setPolicyState",
      "jump": "i",
      "offset": [
        137,
        180
      ],
      "op": "JUMP",
      "path": "4"
    },
    "105": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "106": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "108": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "110": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "DUP2",
      "path": "4"
    },
    "111": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "112": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "113": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "114": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "DUP2",
      "path": "4"
    },
    "115": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "116": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "118": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "119": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "120": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "121": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "123": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "AND",
      "path": "4"
    },
    "124": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "DUP2",
      "path": "4"
    },
    "125": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "JUMP",
      "path": "4"
    },
    "126": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "127": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "129": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "130": {
      "op": "SWAP1"
    },
    "131": {
      "op": "ISZERO"
    },
    "132": {
      "op": "ISZERO"
    },
    "133": {
      "op": "DUP2"
    },
    "134": {
      "op": "MSTORE"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "137": {
      "op": "ADD"
    },
    "138": {
      "offset": [
        137,
        180
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "140": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "141": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "DUP1",
      "path": "4"
    },
    "142": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "143": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "SUB",
      "path": "4"
    },
    "144": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "145": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        137,
        180
      ],
      "op": "RETURN",
      "path": "4"
    },
    "146": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "147": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E"
    },
    "150": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA0"
    },
    "153": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "154": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "156": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E5"
    },
    "159": {
      "fn": "Policy2.checkPolicy",
      "jump": "i",
      "offset": [
        1015,
        1433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "160": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "161": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x133"
    },
    "164": {
      "fn": "Policy2.checkPolicy",
      "jump": "i",
      "offset": [
        1015,
        1433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "165": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "166": {
      "offset": [
        468,
        478
      ],
      "op": "CALLER",
      "path": "4"
    },
    "167": {
      "offset": [
        456,
        467
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "169": {
      "offset": [
        456,
        479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "170": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "DUP2",
      "path": "4"
    },
    "171": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "172": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "174": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "DUP2",
      "path": "4"
    },
    "175": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "176": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "177": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "179": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "180": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "181": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "182": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "184": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        479
      ],
      "op": "AND",
      "path": "4"
    },
    "185": {
      "offset": [
        456,
        487
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "186": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        456,
        487
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "187": {
      "offset": [
        456,
        479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "189": {
      "offset": [
        456,
        487
      ],
      "op": "EQ",
      "path": "4"
    },
    "190": {
      "offset": [
        448,
        519
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E"
    },
    "193": {
      "offset": [
        448,
        519
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "194": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "196": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "offset": [
        448,
        519
      ],
      "op": "DUP2",
      "path": "4"
    },
    "205": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "offset": [
        448,
        519
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "210": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "DUP3",
      "path": "4"
    },
    "211": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "ADD",
      "path": "4"
    },
    "212": {
      "op": "MSTORE"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "217": {
      "op": "DUP3"
    },
    "218": {
      "op": "ADD"
    },
    "219": {
      "op": "MSTORE"
    },
    "220": {
      "op": "PUSH32",
      "value": "0x53656E646572206973206E6F7420616E20617574686F726974792E0000000000"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "255": {
      "op": "DUP3"
    },
    "256": {
      "op": "ADD"
    },
    "257": {
      "op": "MSTORE"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "260": {
      "op": "ADD"
    },
    "261": {
      "offset": [
        448,
        519
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "262": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "264": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "265": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "DUP1",
      "path": "4"
    },
    "266": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "267": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "SUB",
      "path": "4"
    },
    "268": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "269": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "270": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        448,
        519
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "271": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        984
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x1"
    },
    "273": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "DUP1",
      "path": "4"
    },
    "274": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "275": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        987,
        999
      ],
      "op": "DUP3",
      "path": "4"
    },
    "276": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        987,
        999
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "277": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        984
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "278": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "280": {
      "op": "NOT"
    },
    "281": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "AND",
      "path": "4"
    },
    "282": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        984
      ],
      "op": "DUP2",
      "path": "4"
    },
    "283": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        987,
        999
      ],
      "op": "DUP4",
      "path": "4"
    },
    "284": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "DUP2",
      "path": "4"
    },
    "285": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "DUP2",
      "path": "4"
    },
    "286": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "GT",
      "path": "4"
    },
    "287": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "288": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B"
    },
    "291": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "292": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B"
    },
    "295": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FE"
    },
    "298": {
      "fn": "Policy2.setPolicyState",
      "jump": "i",
      "offset": [
        973,
        999
      ],
      "op": "JUMP",
      "path": "4"
    },
    "299": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "300": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "MUL",
      "path": "4"
    },
    "301": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "OR",
      "path": "4"
    },
    "302": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "303": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "304": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        973,
        999
      ],
      "op": "POP",
      "path": "4"
    },
    "305": {
      "fn": "Policy2.setPolicyState",
      "offset": [
        887,
        1007
      ],
      "op": "POP",
      "path": "4"
    },
    "306": {
      "fn": "Policy2.setPolicyState",
      "jump": "o",
      "offset": [
        887,
        1007
      ],
      "op": "JUMP",
      "path": "4"
    },
    "307": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "308": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "310": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1090,
        1094
      ],
      "op": "DUP1",
      "path": "4"
    },
    "311": {
      "offset": [
        589,
        600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "313": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        600
      ],
      "op": "DUP1",
      "path": "4"
    },
    "314": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        600
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "315": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "317": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        600
      ],
      "op": "AND",
      "path": "4"
    },
    "318": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        600
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "319": {
      "offset": [
        589,
        622
      ],
      "op": "DUP2",
      "path": "4"
    },
    "320": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "GT",
      "path": "4"
    },
    "321": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "322": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D"
    },
    "325": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "326": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D"
    },
    "329": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FE"
    },
    "332": {
      "fn": "Policy2.checkPolicy",
      "jump": "i",
      "offset": [
        589,
        622
      ],
      "op": "JUMP",
      "path": "4"
    },
    "333": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "334": {
      "branch": 6,
      "fn": "Policy2.checkPolicy",
      "offset": [
        589,
        622
      ],
      "op": "EQ",
      "path": "4"
    },
    "335": {
      "offset": [
        581,
        648
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "338": {
      "branch": 6,
      "offset": [
        581,
        648
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "339": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        581,
        648
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "341": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        581,
        648
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "348": {
      "op": "SHL"
    },
    "349": {
      "offset": [
        581,
        648
      ],
      "op": "DUP2",
      "path": "4"
    },
    "350": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        581,
        648
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "353": {
      "offset": [
        581,
        648
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "355": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        581,
        648
      ],
      "op": "DUP3",
      "path": "4"
    },
    "356": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        581,
        648
      ],
      "op": "ADD",
      "path": "4"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "362": {
      "op": "DUP3"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "op": "MSTORE"
    },
    "365": {
      "op": "PUSH21",
      "value": "0x506F6C69637932206973206E6F7420416374697665"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "392": {
      "op": "DUP3"
    },
    "393": {
      "op": "ADD"
    },
    "394": {
      "op": "MSTORE"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "397": {
      "op": "ADD"
    },
    "398": {
      "offset": [
        581,
        648
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x105"
    },
    "401": {
      "op": "JUMP"
    },
    "402": {
      "offset": [
        581,
        648
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "403": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1120,
        1135
      ],
      "op": "TIMESTAMP",
      "path": "4",
      "statement": 1
    },
    "404": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1106,
        1117
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "406": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1106,
        1135
      ],
      "op": "DUP2",
      "path": "4"
    },
    "407": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1106,
        1135
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "408": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1106,
        1135
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "409": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1178,
        1197
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "411": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1178,
        1197
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "412": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1178,
        1197
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "413": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1150,
        1175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7"
    },
    "416": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1150,
        1175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "417": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1164,
        1175
      ],
      "op": "DUP5",
      "path": "4"
    },
    "418": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1164,
        1175
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "419": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1150,
        1175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x314"
    },
    "422": {
      "fn": "Policy2.checkPolicy",
      "jump": "i",
      "offset": [
        1150,
        1175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "423": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1150,
        1175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "424": {
      "branch": 7,
      "fn": "Policy2.checkPolicy",
      "offset": [
        1150,
        1197
      ],
      "op": "LT",
      "path": "4"
    },
    "425": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1146,
        1426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x225"
    },
    "428": {
      "branch": 7,
      "fn": "Policy2.checkPolicy",
      "offset": [
        1146,
        1426
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "429": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 2,
      "value": "0x50E8D46DCB719FFEAE31CDB40141820A1744374032E7A478588D9300A568FBAE"
    },
    "462": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "464": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "465": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x215"
    },
    "468": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "471": {
      "op": "DUP1"
    },
    "472": {
      "op": "DUP3"
    },
    "473": {
      "op": "MSTORE"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "476": {
      "op": "SWAP1"
    },
    "477": {
      "op": "DUP3"
    },
    "478": {
      "op": "ADD"
    },
    "479": {
      "op": "MSTORE"
    },
    "480": {
      "op": "PUSH32",
      "value": "0x54696D6520496E74657276616C207265737472696374696F6E20706173736564"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "515": {
      "op": "DUP3"
    },
    "516": {
      "op": "ADD"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "520": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "522": {
      "op": "SHL"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "525": {
      "op": "DUP3"
    },
    "526": {
      "op": "ADD"
    },
    "527": {
      "op": "MSTORE"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "SWAP1"
    },
    "532": {
      "op": "JUMP"
    },
    "533": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "534": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "536": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "537": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "DUP1",
      "path": "4"
    },
    "538": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "539": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "SUB",
      "path": "4"
    },
    "540": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "541": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1219,
        1271
      ],
      "op": "LOG1",
      "path": "4"
    },
    "542": {
      "op": "POP"
    },
    "543": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1293,
        1297
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x1"
    },
    "545": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "546": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "547": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "POP",
      "path": "4"
    },
    "548": {
      "fn": "Policy2.checkPolicy",
      "jump": "o",
      "offset": [
        1015,
        1433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "549": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1146,
        1426
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "550": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 4,
      "value": "0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3"
    },
    "583": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "585": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "586": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x284"
    },
    "589": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "592": {
      "op": "DUP1"
    },
    "593": {
      "op": "DUP3"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "597": {
      "op": "SWAP1"
    },
    "598": {
      "op": "DUP3"
    },
    "599": {
      "op": "ADD"
    },
    "600": {
      "op": "MSTORE"
    },
    "601": {
      "op": "PUSH32",
      "value": "0x54696D6520496E74657276616C207265737472696374696F6E21210000000000"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "636": {
      "op": "DUP3"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "op": "MSTORE"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "op": "SWAP1"
    },
    "643": {
      "op": "JUMP"
    },
    "644": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "645": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "647": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "648": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP1",
      "path": "4"
    },
    "649": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "650": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "SUB",
      "path": "4"
    },
    "651": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "652": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1343,
        1387
      ],
      "op": "LOG1",
      "path": "4"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1409,
        1414
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x0"
    },
    "656": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "657": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "658": {
      "fn": "Policy2.checkPolicy",
      "offset": [
        1015,
        1433
      ],
      "op": "POP",
      "path": "4"
    },
    "659": {
      "fn": "Policy2.checkPolicy",
      "jump": "o",
      "offset": [
        1015,
        1433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "660": {
      "op": "JUMPDEST"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "665": {
      "op": "DUP3"
    },
    "666": {
      "op": "DUP5"
    },
    "667": {
      "op": "SUB"
    },
    "668": {
      "op": "SLT"
    },
    "669": {
      "op": "ISZERO"
    },
    "670": {
      "op": "PUSH2",
      "value": "0x2A6"
    },
    "673": {
      "op": "JUMPI"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "676": {
      "op": "DUP1"
    },
    "677": {
      "op": "REVERT"
    },
    "678": {
      "op": "JUMPDEST"
    },
    "679": {
      "op": "DUP2"
    },
    "680": {
      "op": "CALLDATALOAD"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "683": {
      "op": "DUP2"
    },
    "684": {
      "op": "LT"
    },
    "685": {
      "op": "PUSH2",
      "value": "0x2B5"
    },
    "688": {
      "op": "JUMPI"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "691": {
      "op": "DUP1"
    },
    "692": {
      "op": "REVERT"
    },
    "693": {
      "op": "JUMPDEST"
    },
    "694": {
      "op": "SWAP4"
    },
    "695": {
      "op": "SWAP3"
    },
    "696": {
      "op": "POP"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "op": "POP"
    },
    "699": {
      "jump": "o",
      "op": "JUMP"
    },
    "700": {
      "op": "JUMPDEST"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "705": {
      "op": "DUP3"
    },
    "706": {
      "op": "DUP5"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "op": "SLT"
    },
    "709": {
      "op": "ISZERO"
    },
    "710": {
      "op": "PUSH2",
      "value": "0x2CE"
    },
    "713": {
      "op": "JUMPI"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "716": {
      "op": "DUP1"
    },
    "717": {
      "op": "REVERT"
    },
    "718": {
      "op": "JUMPDEST"
    },
    "719": {
      "op": "DUP2"
    },
    "720": {
      "op": "CALLDATALOAD"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "SUB"
    },
    "729": {
      "op": "DUP2"
    },
    "730": {
      "op": "AND"
    },
    "731": {
      "op": "DUP2"
    },
    "732": {
      "op": "EQ"
    },
    "733": {
      "op": "PUSH2",
      "value": "0x2B5"
    },
    "736": {
      "op": "JUMPI"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "739": {
      "op": "DUP1"
    },
    "740": {
      "op": "REVERT"
    },
    "741": {
      "op": "JUMPDEST"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "746": {
      "op": "DUP3"
    },
    "747": {
      "op": "DUP5"
    },
    "748": {
      "op": "SUB"
    },
    "749": {
      "op": "SLT"
    },
    "750": {
      "op": "ISZERO"
    },
    "751": {
      "op": "PUSH2",
      "value": "0x2F7"
    },
    "754": {
      "op": "JUMPI"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "757": {
      "op": "DUP1"
    },
    "758": {
      "op": "REVERT"
    },
    "759": {
      "op": "JUMPDEST"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "op": "CALLDATALOAD"
    },
    "762": {
      "op": "SWAP2"
    },
    "763": {
      "op": "SWAP1"
    },
    "764": {
      "op": "POP"
    },
    "765": {
      "jump": "o",
      "op": "JUMP"
    },
    "766": {
      "op": "JUMPDEST"
    },
    "767": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "772": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "774": {
      "op": "SHL"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "777": {
      "op": "MSTORE"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "787": {
      "op": "REVERT"
    },
    "788": {
      "op": "JUMPDEST"
    },
    "789": {
      "op": "DUP2"
    },
    "790": {
      "op": "DUP2"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "op": "DUP2"
    },
    "793": {
      "op": "DUP2"
    },
    "794": {
      "op": "GT"
    },
    "795": {
      "op": "ISZERO"
    },
    "796": {
      "op": "PUSH2",
      "value": "0x335"
    },
    "799": {
      "op": "JUMPI"
    },
    "800": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "807": {
      "op": "SHL"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "815": {
      "op": "MSTORE"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "820": {
      "op": "REVERT"
    },
    "821": {
      "op": "JUMPDEST"
    },
    "822": {
      "op": "SWAP3"
    },
    "823": {
      "op": "SWAP2"
    },
    "824": {
      "op": "POP"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "40878ce422929f1e952db9b8e3fcc232f01b0c4c",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.17;\ncontract Policy2  {\n    enum PolicyState {Active, Deactivated}\n\n    mapping(address => bool) public authorities;\n\n    // VARIABLES\n    PolicyState policyState;\n    uint presentTime;\n    uint restricted_interval;\n    // EVENTS\n    event AccessDenied( string message);\n    event AccessApproved( string message);\n    // MODIFIERS\n    modifier authorities_only(){\n        require(authorities[msg.sender] == true, \"Sender is not an authority.\");\n        _;\n    }\n    modifier onlyWhenActive(){\n        require(policyState == PolicyState.Active, \"Policy2 is not Active\");\n        _;\n    }\n    //CONSTRUCTOR\n    constructor( uint _restricted_interval){\n        policyState = PolicyState.Active;\n        restricted_interval = _restricted_interval;\n        authorities[msg.sender] = true;\n\n    }\n\n    function setPolicyState(PolicyState _policyState) public authorities_only(){\n        policyState = _policyState;\n    }\n\n    function checkPolicy(uint256  lastUpdated)public onlyWhenActive() returns (bool){\n        presentTime = block.timestamp;\n        if( presentTime - lastUpdated >=restricted_interval ){\n            emit AccessApproved( \"Time Interval restriction passed!\");\n            return true;\n        }\n        else{\n            emit AccessDenied( \"Time Interval restriction!!\");\n            return false;\n        }\n    }\n}",
  "sourceMap": "66:1370:4:-:0;;;693:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;743:11;:32;;-1:-1:-1;;743:32:4;;;;;786:19;:42;;;;851:10;757:18;839:23;;;;;;;;;;:30;;;;;;;;66:1370;;14:184:10;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:10;;14:184;-1:-1:-1;14:184:10:o;203:127::-;66:1370:4;;;;;;",
  "sourcePath": "contracts/Policies/Policy2.sol",
  "type": "contract"
}