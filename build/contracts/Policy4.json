{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "AccessApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "AccessDenied",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorities",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Device.Category",
          "name": "sub_category",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "sub_trust",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "obj_trust",
          "type": "uint256"
        }
      ],
      "name": "checkPolicy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Policy4.PolicyState",
          "name": "_policyState",
          "type": "uint8"
        }
      ],
      "name": "setPolicyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Device.sol",
    "6": "contracts/Policies/Policy4.sol"
  },
  "ast": {
    "absolutePath": "contracts/Policies/Policy4.sol",
    "exportedSymbols": {
      "Device": [
        1739
      ],
      "ObjectAttribute": [
        455
      ],
      "Policy4": [
        1173
      ],
      "SubjectAttribute": [
        1723
      ]
    },
    "id": 1174,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 963,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:6"
      },
      {
        "absolutePath": "contracts/SubjectAttribute.sol",
        "file": "contracts/SubjectAttribute.sol",
        "id": 964,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1174,
        "sourceUnit": 1724,
        "src": "64:40:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ObjectAttribute.sol",
        "file": "contracts/ObjectAttribute.sol",
        "id": 965,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1174,
        "sourceUnit": 456,
        "src": "105:39:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Policy4",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1173,
        "linearizedBaseContracts": [
          1173
        ],
        "name": "Policy4",
        "nameLocation": "154:7:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Policy4.PolicyState",
            "id": 968,
            "members": [
              {
                "id": 966,
                "name": "Active",
                "nameLocation": "185:6:6",
                "nodeType": "EnumValue",
                "src": "185:6:6"
              },
              {
                "id": 967,
                "name": "Deactivated",
                "nameLocation": "193:11:6",
                "nodeType": "EnumValue",
                "src": "193:11:6"
              }
            ],
            "name": "PolicyState",
            "nameLocation": "172:11:6",
            "nodeType": "EnumDefinition",
            "src": "167:38:6"
          },
          {
            "constant": false,
            "functionSelector": "91223d69",
            "id": 972,
            "mutability": "mutable",
            "name": "authorities",
            "nameLocation": "243:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1173,
            "src": "211:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 971,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 969,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "211:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 970,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "230:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 975,
            "mutability": "mutable",
            "name": "policyState",
            "nameLocation": "289:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1173,
            "src": "277:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PolicyState_$968",
              "typeString": "enum Policy4.PolicyState"
            },
            "typeName": {
              "id": 974,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 973,
                "name": "PolicyState",
                "nameLocations": [
                  "277:11:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 968,
                "src": "277:11:6"
              },
              "referencedDeclaration": 968,
              "src": "277:11:6",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PolicyState_$968",
                "typeString": "enum Policy4.PolicyState"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "fa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f3",
            "id": 979,
            "name": "AccessDenied",
            "nameLocation": "326:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "347:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "340:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "338:17:6"
            },
            "src": "320:36:6"
          },
          {
            "anonymous": false,
            "eventSelector": "50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae",
            "id": 983,
            "name": "AccessApproved",
            "nameLocation": "367:14:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "390:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "383:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:17:6"
            },
            "src": "361:38:6"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "448:99:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 986,
                            "name": "authorities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "466:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 989,
                          "indexExpression": {
                            "expression": {
                              "id": 987,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "478:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "482:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "478:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "466:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "493:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "466:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616e20617574686f726974792e",
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "499:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_163f4de8b69521479251ff5c78e4858f62ef471f12abb64a835e0a68fc65d99c",
                          "typeString": "literal_string \"Sender is not an authority.\""
                        },
                        "value": "Sender is not an authority."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_163f4de8b69521479251ff5c78e4858f62ef471f12abb64a835e0a68fc65d99c",
                          "typeString": "literal_string \"Sender is not an authority.\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "458:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "458:71:6"
                },
                {
                  "id": 995,
                  "nodeType": "PlaceholderStatement",
                  "src": "539:1:6"
                }
              ]
            },
            "id": 997,
            "name": "authorities_only",
            "nameLocation": "430:16:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:6"
            },
            "src": "421:126:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1008,
              "nodeType": "Block",
              "src": "577:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyState_$968",
                          "typeString": "enum Policy4.PolicyState"
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1000,
                          "name": "policyState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 975,
                          "src": "595:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyState_$968",
                            "typeString": "enum Policy4.PolicyState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1001,
                            "name": "PolicyState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 968,
                            "src": "610:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyState_$968_$",
                              "typeString": "type(enum Policy4.PolicyState)"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "622:6:6",
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "610:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyState_$968",
                            "typeString": "enum Policy4.PolicyState"
                          }
                        },
                        "src": "595:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c69637934206973206e6f7420416374697665",
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "630:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30122ab7b25b54566cf299c385530c34b35fad9a8eda49b808dd8dec6df94f67",
                          "typeString": "literal_string \"Policy4 is not Active\""
                        },
                        "value": "Policy4 is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30122ab7b25b54566cf299c385530c34b35fad9a8eda49b808dd8dec6df94f67",
                          "typeString": "literal_string \"Policy4 is not Active\""
                        }
                      ],
                      "id": 999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "587:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "587:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "587:67:6"
                },
                {
                  "id": 1007,
                  "nodeType": "PlaceholderStatement",
                  "src": "664:1:6"
                }
              ]
            },
            "id": 1009,
            "name": "onlyWhenActive",
            "nameLocation": "561:14:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:6"
            },
            "src": "552:120:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "709:89:6",
              "statements": [
                {
                  "expression": {
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1012,
                      "name": "policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "719:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$968",
                        "typeString": "enum Policy4.PolicyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1013,
                        "name": "PolicyState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "733:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyState_$968_$",
                          "typeString": "type(enum Policy4.PolicyState)"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "745:6:6",
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "733:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$968",
                        "typeString": "enum Policy4.PolicyState"
                      }
                    },
                    "src": "719:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$968",
                      "typeString": "enum Policy4.PolicyState"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "719:32:6"
                },
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1017,
                        "name": "authorities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "761:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1020,
                      "indexExpression": {
                        "expression": {
                          "id": 1018,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "773:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "777:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "773:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "761:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "787:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "761:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "761:30:6"
                }
              ]
            },
            "id": 1025,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:2:6"
            },
            "returnParameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:6"
            },
            "scope": 1173,
            "src": "696:102:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "879:43:6",
              "statements": [
                {
                  "expression": {
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1033,
                      "name": "policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "889:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$968",
                        "typeString": "enum Policy4.PolicyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1034,
                      "name": "_policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "903:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$968",
                        "typeString": "enum Policy4.PolicyState"
                      }
                    },
                    "src": "889:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$968",
                      "typeString": "enum Policy4.PolicyState"
                    }
                  },
                  "id": 1036,
                  "nodeType": "ExpressionStatement",
                  "src": "889:26:6"
                }
              ]
            },
            "functionSelector": "3bd31ccd",
            "id": 1038,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1031,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1030,
                  "name": "authorities_only",
                  "nameLocations": [
                    "861:16:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 997,
                  "src": "861:16:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "861:18:6"
              }
            ],
            "name": "setPolicyState",
            "nameLocation": "813:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "_policyState",
                  "nameLocation": "840:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "828:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PolicyState_$968",
                    "typeString": "enum Policy4.PolicyState"
                  },
                  "typeName": {
                    "id": 1027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1026,
                      "name": "PolicyState",
                      "nameLocations": [
                        "828:11:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 968,
                      "src": "828:11:6"
                    },
                    "referencedDeclaration": 968,
                    "src": "828:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$968",
                      "typeString": "enum Policy4.PolicyState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:26:6"
            },
            "returnParameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:0:6"
            },
            "scope": 1173,
            "src": "804:118:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "1046:1437:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Category_$1734",
                      "typeString": "enum Device.Category"
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1052,
                      "name": "sub_category",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "1056:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1734",
                        "typeString": "enum Device.Category"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1053,
                          "name": "Device",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1739,
                          "src": "1072:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Device_$1739_$",
                            "typeString": "type(library Device)"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1079:8:6",
                        "memberName": "Category",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1734,
                        "src": "1072:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Category_$1734_$",
                          "typeString": "type(enum Device.Category)"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1088:10:6",
                      "memberName": "Monitoring",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1733,
                      "src": "1072:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1734",
                        "typeString": "enum Device.Category"
                      }
                    },
                    "src": "1056:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Category_$1734",
                        "typeString": "enum Device.Category"
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1076,
                        "name": "sub_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "1359:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1734",
                          "typeString": "enum Device.Category"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 1077,
                            "name": "Device",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1739,
                            "src": "1375:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Device_$1739_$",
                              "typeString": "type(library Device)"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1382:8:6",
                          "memberName": "Category",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1734,
                          "src": "1375:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Category_$1734_$",
                            "typeString": "type(enum Device.Category)"
                          }
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1391:8:6",
                        "memberName": "Security",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1730,
                        "src": "1375:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1734",
                          "typeString": "enum Device.Category"
                        }
                      },
                      "src": "1359:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Category_$1734",
                          "typeString": "enum Device.Category"
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1104,
                          "name": "sub_category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "1700:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1734",
                            "typeString": "enum Device.Category"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 1105,
                              "name": "Device",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "1716:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Device_$1739_$",
                                "typeString": "type(library Device)"
                              }
                            },
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1723:8:6",
                            "memberName": "Category",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1734,
                            "src": "1716:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Category_$1734_$",
                              "typeString": "type(enum Device.Category)"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1732:6:6",
                          "memberName": "Health",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1732,
                          "src": "1716:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1734",
                            "typeString": "enum Device.Category"
                          }
                        },
                        "src": "1700:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Category_$1734",
                            "typeString": "enum Device.Category"
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1132,
                            "name": "sub_category",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "2039:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Category_$1734",
                              "typeString": "enum Device.Category"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1133,
                                "name": "Device",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1739,
                                "src": "2055:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Device_$1739_$",
                                  "typeString": "type(library Device)"
                                }
                              },
                              "id": 1134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2062:8:6",
                              "memberName": "Category",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1734,
                              "src": "2055:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Category_$1734_$",
                                "typeString": "type(enum Device.Category)"
                              }
                            },
                            "id": 1135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2071:13:6",
                            "memberName": "Entertainment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1731,
                            "src": "2055:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Category_$1734",
                              "typeString": "enum Device.Category"
                            }
                          },
                          "src": "2039:45:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1166,
                          "nodeType": "Block",
                          "src": "2380:101:6",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "5375626a65637427732026204f626a6563742773207472757374206e6f7420617070726f76656421",
                                    "id": 1161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2408:42:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                      "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                    },
                                    "value": "Subject's & Object's trust not approved!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                      "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                    }
                                  ],
                                  "id": 1160,
                                  "name": "AccessDenied",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 979,
                                  "src": "2395:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory)"
                                  }
                                },
                                "id": 1162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2395:56:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1163,
                              "nodeType": "EmitStatement",
                              "src": "2390:61:6"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2469:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1051,
                              "id": 1165,
                              "nodeType": "Return",
                              "src": "2462:12:6"
                            }
                          ]
                        },
                        "id": 1167,
                        "nodeType": "IfStatement",
                        "src": "2035:446:6",
                        "trueBody": {
                          "id": 1159,
                          "nodeType": "Block",
                          "src": "2086:285:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1137,
                                    "name": "sub_trust",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1043,
                                    "src": "2100:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "hexValue": "3130",
                                    "id": 1138,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2113:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "src": "2100:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1142,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1140,
                                    "name": "obj_trust",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "2119:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "hexValue": "3130",
                                    "id": 1141,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2132:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "src": "2119:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2100:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1157,
                                "nodeType": "Block",
                                "src": "2252:113:6",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "hexValue": "5375626a65637427732026204f626a6563742773207472757374206e6f7420617070726f76656421",
                                          "id": 1152,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2284:42:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                            "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                          },
                                          "value": "Subject's & Object's trust not approved!"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                            "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                          }
                                        ],
                                        "id": 1151,
                                        "name": "AccessDenied",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 979,
                                        "src": "2271:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory)"
                                        }
                                      },
                                      "id": 1153,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2271:56:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1154,
                                    "nodeType": "EmitStatement",
                                    "src": "2266:61:6"
                                  },
                                  {
                                    "expression": {
                                      "hexValue": "66616c7365",
                                      "id": 1155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2349:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    },
                                    "functionReturnParameters": 1051,
                                    "id": 1156,
                                    "nodeType": "Return",
                                    "src": "2342:12:6"
                                  }
                                ]
                              },
                              "id": 1158,
                              "nodeType": "IfStatement",
                              "src": "2096:269:6",
                              "trueBody": {
                                "id": 1150,
                                "nodeType": "Block",
                                "src": "2136:110:6",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "hexValue": "5375626a65637427732026204f626a656374277320747275737420617070726f76656421",
                                          "id": 1145,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2170:38:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_827f04be7fd3c90aea2ac5d4f5427770baecdfc0fba5b8ac9e5a82c5429e73f8",
                                            "typeString": "literal_string \"Subject's & Object's trust approved!\""
                                          },
                                          "value": "Subject's & Object's trust approved!"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_827f04be7fd3c90aea2ac5d4f5427770baecdfc0fba5b8ac9e5a82c5429e73f8",
                                            "typeString": "literal_string \"Subject's & Object's trust approved!\""
                                          }
                                        ],
                                        "id": 1144,
                                        "name": "AccessApproved",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 983,
                                        "src": "2155:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory)"
                                        }
                                      },
                                      "id": 1146,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2155:54:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1147,
                                    "nodeType": "EmitStatement",
                                    "src": "2150:59:6"
                                  },
                                  {
                                    "expression": {
                                      "hexValue": "74727565",
                                      "id": 1148,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2231:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 1051,
                                    "id": 1149,
                                    "nodeType": "Return",
                                    "src": "2224:11:6"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "id": 1168,
                      "nodeType": "IfStatement",
                      "src": "1696:785:6",
                      "trueBody": {
                        "id": 1131,
                        "nodeType": "Block",
                        "src": "1740:285:6",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1109,
                                  "name": "sub_trust",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1043,
                                  "src": "1754:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "3330",
                                  "id": 1110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1767:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_30_by_1",
                                    "typeString": "int_const 30"
                                  },
                                  "value": "30"
                                },
                                "src": "1754:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1112,
                                  "name": "obj_trust",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "1773:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "3330",
                                  "id": 1113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1786:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_30_by_1",
                                    "typeString": "int_const 30"
                                  },
                                  "value": "30"
                                },
                                "src": "1773:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1754:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1129,
                              "nodeType": "Block",
                              "src": "1906:113:6",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "hexValue": "5375626a65637427732026204f626a6563742773207472757374206e6f7420617070726f76656421",
                                        "id": 1124,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1938:42:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                          "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                        },
                                        "value": "Subject's & Object's trust not approved!"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                          "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                        }
                                      ],
                                      "id": 1123,
                                      "name": "AccessDenied",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 979,
                                      "src": "1925:12:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory)"
                                      }
                                    },
                                    "id": 1125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1925:56:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1126,
                                  "nodeType": "EmitStatement",
                                  "src": "1920:61:6"
                                },
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 1127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2003:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 1051,
                                  "id": 1128,
                                  "nodeType": "Return",
                                  "src": "1996:12:6"
                                }
                              ]
                            },
                            "id": 1130,
                            "nodeType": "IfStatement",
                            "src": "1750:269:6",
                            "trueBody": {
                              "id": 1122,
                              "nodeType": "Block",
                              "src": "1790:110:6",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "hexValue": "5375626a65637427732026204f626a656374277320747275737420617070726f76656421",
                                        "id": 1117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1824:38:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_827f04be7fd3c90aea2ac5d4f5427770baecdfc0fba5b8ac9e5a82c5429e73f8",
                                          "typeString": "literal_string \"Subject's & Object's trust approved!\""
                                        },
                                        "value": "Subject's & Object's trust approved!"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_827f04be7fd3c90aea2ac5d4f5427770baecdfc0fba5b8ac9e5a82c5429e73f8",
                                          "typeString": "literal_string \"Subject's & Object's trust approved!\""
                                        }
                                      ],
                                      "id": 1116,
                                      "name": "AccessApproved",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 983,
                                      "src": "1809:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory)"
                                      }
                                    },
                                    "id": 1118,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1809:54:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1119,
                                  "nodeType": "EmitStatement",
                                  "src": "1804:59:6"
                                },
                                {
                                  "expression": {
                                    "hexValue": "74727565",
                                    "id": 1120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1885:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "functionReturnParameters": 1051,
                                  "id": 1121,
                                  "nodeType": "Return",
                                  "src": "1878:11:6"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "id": 1169,
                    "nodeType": "IfStatement",
                    "src": "1355:1126:6",
                    "trueBody": {
                      "id": 1103,
                      "nodeType": "Block",
                      "src": "1401:285:6",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1081,
                                "name": "sub_trust",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1043,
                                "src": "1415:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "3530",
                                "id": 1082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1428:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                },
                                "value": "50"
                              },
                              "src": "1415:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1084,
                                "name": "obj_trust",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "1434:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "3530",
                                "id": 1085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1447:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                },
                                "value": "50"
                              },
                              "src": "1434:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1415:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 1101,
                            "nodeType": "Block",
                            "src": "1567:113:6",
                            "statements": [
                              {
                                "eventCall": {
                                  "arguments": [
                                    {
                                      "hexValue": "5375626a65637427732026204f626a6563742773207472757374206e6f7420617070726f76656421",
                                      "id": 1096,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1599:42:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                        "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                      },
                                      "value": "Subject's & Object's trust not approved!"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_7714b408703407347a24b5b3d9e097e74e1e9e17a6779a2b80776e8c46c65c44",
                                        "typeString": "literal_string \"Subject's & Object's trust not approved!\""
                                      }
                                    ],
                                    "id": 1095,
                                    "name": "AccessDenied",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 979,
                                    "src": "1586:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (string memory)"
                                    }
                                  },
                                  "id": 1097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1586:56:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1098,
                                "nodeType": "EmitStatement",
                                "src": "1581:61:6"
                              },
                              {
                                "expression": {
                                  "hexValue": "66616c7365",
                                  "id": 1099,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1664:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "functionReturnParameters": 1051,
                                "id": 1100,
                                "nodeType": "Return",
                                "src": "1657:12:6"
                              }
                            ]
                          },
                          "id": 1102,
                          "nodeType": "IfStatement",
                          "src": "1411:269:6",
                          "trueBody": {
                            "id": 1094,
                            "nodeType": "Block",
                            "src": "1451:110:6",
                            "statements": [
                              {
                                "eventCall": {
                                  "arguments": [
                                    {
                                      "hexValue": "5375626a65637427732026204f626a656374277320747275737420617070726f76656421",
                                      "id": 1089,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1485:38:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_827f04be7fd3c90aea2ac5d4f5427770baecdfc0fba5b8ac9e5a82c5429e73f8",
                                        "typeString": "literal_string \"Subject's & Object's trust approved!\""
                                      },
                                      "value": "Subject's & Object's trust approved!"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_827f04be7fd3c90aea2ac5d4f5427770baecdfc0fba5b8ac9e5a82c5429e73f8",
                                        "typeString": "literal_string \"Subject's & Object's trust approved!\""
                                      }
                                    ],
                                    "id": 1088,
                                    "name": "AccessApproved",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 983,
                                    "src": "1470:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (string memory)"
                                    }
                                  },
                                  "id": 1090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1470:54:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1091,
                                "nodeType": "EmitStatement",
                                "src": "1465:59:6"
                              },
                              {
                                "expression": {
                                  "hexValue": "74727565",
                                  "id": 1092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1546:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "functionReturnParameters": 1051,
                                "id": 1093,
                                "nodeType": "Return",
                                "src": "1539:11:6"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 1170,
                  "nodeType": "IfStatement",
                  "src": "1052:1429:6",
                  "trueBody": {
                    "id": 1075,
                    "nodeType": "Block",
                    "src": "1100:245:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1057,
                            "name": "sub_trust",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "1115:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3830",
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1128:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_80_by_1",
                              "typeString": "int_const 80"
                            },
                            "value": "80"
                          },
                          "src": "1115:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1073,
                          "nodeType": "Block",
                          "src": "1237:102:6",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "5375626a6563742773207472757374206e6f7420617070726f76656421",
                                    "id": 1068,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1269:31:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_cbf492fb9a9cdf7eb1f425aceaeb7b752cede9e136d8fed1c31b46a7a0d41749",
                                      "typeString": "literal_string \"Subject's trust not approved!\""
                                    },
                                    "value": "Subject's trust not approved!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_cbf492fb9a9cdf7eb1f425aceaeb7b752cede9e136d8fed1c31b46a7a0d41749",
                                      "typeString": "literal_string \"Subject's trust not approved!\""
                                    }
                                  ],
                                  "id": 1067,
                                  "name": "AccessDenied",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 979,
                                  "src": "1256:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory)"
                                  }
                                },
                                "id": 1069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1256:45:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1070,
                              "nodeType": "EmitStatement",
                              "src": "1251:50:6"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1323:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1051,
                              "id": 1072,
                              "nodeType": "Return",
                              "src": "1316:12:6"
                            }
                          ]
                        },
                        "id": 1074,
                        "nodeType": "IfStatement",
                        "src": "1111:228:6",
                        "trueBody": {
                          "id": 1066,
                          "nodeType": "Block",
                          "src": "1132:99:6",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "5375626a656374277320747275737420617070726f76656421",
                                    "id": 1061,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1166:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_121f88b9c12a80b41d642a6a7611764c6f1709a884db4a1cc859e3e8204bc3d8",
                                      "typeString": "literal_string \"Subject's trust approved!\""
                                    },
                                    "value": "Subject's trust approved!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_121f88b9c12a80b41d642a6a7611764c6f1709a884db4a1cc859e3e8204bc3d8",
                                      "typeString": "literal_string \"Subject's trust approved!\""
                                    }
                                  ],
                                  "id": 1060,
                                  "name": "AccessApproved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 983,
                                  "src": "1151:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory)"
                                  }
                                },
                                "id": 1062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1151:43:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1063,
                              "nodeType": "EmitStatement",
                              "src": "1146:48:6"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1216:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1051,
                              "id": 1065,
                              "nodeType": "Return",
                              "src": "1209:11:6"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f27d81b0",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1048,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1047,
                  "name": "onlyWhenActive",
                  "nameLocations": [
                    "1014:14:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1009,
                  "src": "1014:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1014:16:6"
              }
            ],
            "name": "checkPolicy",
            "nameLocation": "933:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "sub_category",
                  "nameLocation": "961:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "945:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Category_$1734",
                    "typeString": "enum Device.Category"
                  },
                  "typeName": {
                    "id": 1040,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1039,
                      "name": "Device.Category",
                      "nameLocations": [
                        "945:6:6",
                        "952:8:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1734,
                      "src": "945:15:6"
                    },
                    "referencedDeclaration": 1734,
                    "src": "945:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Category_$1734",
                      "typeString": "enum Device.Category"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "sub_trust",
                  "nameLocation": "980:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "975:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "obj_trust",
                  "nameLocation": "996:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "991:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:62:6"
            },
            "returnParameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "1040:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:6:6"
            },
            "scope": 1173,
            "src": "924:1559:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1174,
        "src": "145:2341:6",
        "usedErrors": [],
        "usedEvents": [
          979,
          983
        ]
      }
    ],
    "src": "39:2447:6"
  },
  "bytecode": "6080604052348015600f57600080fd5b506001805460ff19908116825533600090815260208190526040902080549091169091179055610504806100446000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633bd31ccd1461004657806391223d691461005b578063f27d81b014610092575b600080fd5b6100596100543660046103d1565b6100a5565b005b61007e6100693660046103f2565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b61007e6100a036600461041b565b610133565b3360009081526020819052604090205460ff16151560011461010e5760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206973206e6f7420616e20617574686f726974792e000000000060448201526064015b60405180910390fd5b6001805482919060ff191681838181111561012b5761012b610454565b021790555050565b6000806001805460ff169081111561014d5761014d610454565b146101925760405162461bcd60e51b8152602060048201526015602482015274506f6c69637934206973206e6f742041637469766560581b6044820152606401610105565b60038460038111156101a6576101a6610454565b0361027f5760508310610210576000805160206104af8339815191526040516102009060208082526019908201527f5375626a656374277320747275737420617070726f7665642100000000000000604082015260600190565b60405180910390a15060016103ca565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f360405161026f906020808252601d908201527f5375626a6563742773207472757374206e6f7420617070726f76656421000000604082015260600190565b60405180910390a15060006103ca565b600084600381111561029357610293610454565b0361033a57603283101580156102aa575060328210155b156102ca576000805160206104af8339815191526040516102009061046a565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f360405161026f9060208082526028908201527f5375626a65637427732026204f626a6563742773207472757374206e6f7420616040820152677070726f7665642160c01b606082015260800190565b600284600381111561034e5761034e610454565b0361038257601e83101580156102aa5750601e82106102ca576000805160206104af8339815191526040516102009061046a565b600184600381111561039657610396610454565b036102ca57600a83101580156102aa5750600a82106102ca576000805160206104af8339815191526040516102009061046a565b9392505050565b6000602082840312156103e357600080fd5b8135600281106103ca57600080fd5b60006020828403121561040457600080fd5b81356001600160a01b03811681146103ca57600080fd5b60008060006060848603121561043057600080fd5b83356004811061043f57600080fd5b95602085013595506040909401359392505050565b634e487b7160e01b600052602160045260246000fd5b60208082526024908201527f5375626a65637427732026204f626a656374277320747275737420617070726f6040820152637665642160e01b60608201526080019056fe50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbaea2646970667358221220433a4a61221e98c129017d523a1a59c85819fd6bae987e53fcbe522088af225364736f6c634300081a0033",
  "bytecodeSha1": "74b53d86da00d926da342a8d771992f9407cd7e3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.26+commit.8a97fa7a"
  },
  "contractName": "Policy4",
  "coverageMap": {
    "branches": {
      "0": {},
      "6": {
        "Policy4.checkPolicy": {
          "9": [
            595,
            628,
            true
          ],
          "10": [
            1056,
            1098,
            false
          ],
          "11": [
            1115,
            1130,
            false
          ],
          "12": [
            1359,
            1399,
            false
          ],
          "13": [
            1415,
            1430,
            false
          ],
          "14": [
            1434,
            1449,
            false
          ],
          "15": [
            1700,
            1738,
            false
          ],
          "16": [
            1754,
            1769,
            false
          ],
          "17": [
            1773,
            1788,
            false
          ],
          "18": [
            2039,
            2084,
            false
          ],
          "19": [
            2100,
            2115,
            false
          ],
          "20": [
            2119,
            2134,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "6": {
        "Policy4.checkPolicy": {
          "1": [
            1146,
            1194
          ],
          "2": [
            1209,
            1220
          ],
          "3": [
            1251,
            1301
          ],
          "4": [
            1316,
            1328
          ],
          "5": [
            1465,
            1524
          ],
          "6": [
            1581,
            1642
          ],
          "7": [
            1804,
            1863
          ],
          "8": [
            2150,
            2209
          ]
        },
        "Policy4.setPolicyState": {
          "0": [
            889,
            915
          ]
        }
      }
    }
  },
  "dependencies": [
    "Device"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633bd31ccd1461004657806391223d691461005b578063f27d81b014610092575b600080fd5b6100596100543660046103d1565b6100a5565b005b61007e6100693660046103f2565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b61007e6100a036600461041b565b610133565b3360009081526020819052604090205460ff16151560011461010e5760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206973206e6f7420616e20617574686f726974792e000000000060448201526064015b60405180910390fd5b6001805482919060ff191681838181111561012b5761012b610454565b021790555050565b6000806001805460ff169081111561014d5761014d610454565b146101925760405162461bcd60e51b8152602060048201526015602482015274506f6c69637934206973206e6f742041637469766560581b6044820152606401610105565b60038460038111156101a6576101a6610454565b0361027f5760508310610210576000805160206104af8339815191526040516102009060208082526019908201527f5375626a656374277320747275737420617070726f7665642100000000000000604082015260600190565b60405180910390a15060016103ca565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f360405161026f906020808252601d908201527f5375626a6563742773207472757374206e6f7420617070726f76656421000000604082015260600190565b60405180910390a15060006103ca565b600084600381111561029357610293610454565b0361033a57603283101580156102aa575060328210155b156102ca576000805160206104af8339815191526040516102009061046a565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f360405161026f9060208082526028908201527f5375626a65637427732026204f626a6563742773207472757374206e6f7420616040820152677070726f7665642160c01b606082015260800190565b600284600381111561034e5761034e610454565b0361038257601e83101580156102aa5750601e82106102ca576000805160206104af8339815191526040516102009061046a565b600184600381111561039657610396610454565b036102ca57600a83101580156102aa5750600a82106102ca576000805160206104af8339815191526040516102009061046a565b9392505050565b6000602082840312156103e357600080fd5b8135600281106103ca57600080fd5b60006020828403121561040457600080fd5b81356001600160a01b03811681146103ca57600080fd5b60008060006060848603121561043057600080fd5b83356004811061043f57600080fd5b95602085013595506040909401359392505050565b634e487b7160e01b600052602160045260246000fd5b60208082526024908201527f5375626a65637427732026204f626a656374277320747275737420617070726f6040820152637665642160e01b60608201526080019056fe50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbaea2646970667358221220433a4a61221e98c129017d523a1a59c85819fd6bae987e53fcbe522088af225364736f6c634300081a0033",
  "deployedSourceMap": "145:2341:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;804:118;;;;;;:::i;:::-;;:::i;:::-;;211:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;746:14:10;;739:22;721:41;;709:2;694:18;211:43:6;;;;;;;924:1559;;;;;;:::i;:::-;;:::i;804:118::-;478:10;466:11;:23;;;;;;;;;;;;;:31;;:23;:31;458:71;;;;-1:-1:-1;;;458:71:6;;1489:2:10;458:71:6;;;1471:21:10;1528:2;1508:18;;;1501:30;1567:29;1547:18;;;1540:57;1614:18;;458:71:6;;;;;;;;;889:11:::1;:26:::0;;903:12;;889:11;-1:-1:-1;;889:26:6::1;:11:::0;903:12;889:26;;::::1;;;;;;:::i;:::-;;;;;;804:118:::0;:::o;924:1559::-;1040:4;;595:11;;;;;;:33;;;;;;;:::i;:::-;;587:67;;;;-1:-1:-1;;;587:67:6;;1977:2:10;587:67:6;;;1959:21:10;2016:2;1996:18;;;1989:30;-1:-1:-1;;;2035:18:10;;;2028:51;2096:18;;587:67:6;1775:345:10;587:67:6;1072:26:::1;1056:12;:42;;;;;;;;:::i;:::-;::::0;1052:1429:::1;;1128:2;1115:9;:15;1111:228;;-1:-1:-1::0;;;;;;;;;;;1151:43:6::1;;;;2327:2:10::0;2309:21;;;2366:2;2346:18;;;2339:30;2405:27;2400:2;2385:18;;2378:55;2465:2;2450:18;;2125:349;1151:43:6::1;;;;;;;;-1:-1:-1::0;1216:4:6::1;1209:11;;1111:228;1256:45;;;;;2681:2:10::0;2663:21;;;2720:2;2700:18;;;2693:30;2759:31;2754:2;2739:18;;2732:59;2823:2;2808:18;;2479:353;1256:45:6::1;;;;;;;;-1:-1:-1::0;1323:5:6::1;1316:12;;1052:1429;1375:24;1359:12;:40;;;;;;;;:::i;:::-;::::0;1355:1126:::1;;1428:2;1415:9;:15;;:34;;;;;1447:2;1434:9;:15;;1415:34;1411:269;;;-1:-1:-1::0;;;;;;;;;;;1470:54:6::1;;;;;:::i;1411:269::-;1586:56;;;;;3444:2:10::0;3426:21;;;3483:2;3463:18;;;3456:30;3522:34;3517:2;3502:18;;3495:62;-1:-1:-1;;;3588:2:10;3573:18;;3566:38;3636:3;3621:19;;3242:404;1355:1126:6::1;1716:22;1700:12;:38;;;;;;;;:::i;:::-;::::0;1696:785:::1;;1767:2;1754:9;:15;;:34;;;;;1786:2;1773:9;:15;1750:269;;-1:-1:-1::0;;;;;;;;;;;1809:54:6::1;;;;;:::i;1696:785::-;2055:29;2039:12;:45;;;;;;;;:::i;:::-;::::0;2035:446:::1;;2113:2;2100:9;:15;;:34;;;;;2132:2;2119:9;:15;2096:269;;-1:-1:-1::0;;;;;;;;;;;2155:54:6::1;;;;;:::i;2035:446::-;924:1559:::0;;;;;:::o;14:271:10:-;88:6;141:2;129:9;120:7;116:23;112:32;109:52;;;157:1;154;147:12;109:52;196:9;183:23;235:1;228:5;225:12;215:40;;251:1;248;241:12;290:286;349:6;402:2;390:9;381:7;377:23;373:32;370:52;;;418:1;415;408:12;370:52;444:23;;-1:-1:-1;;;;;496:31:10;;486:42;;476:70;;542:1;539;532:12;773:509;863:6;871;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;987:9;974:23;1026:1;1019:5;1016:12;1006:40;;1042:1;1039;1032:12;1006:40;1065:5;1143:2;1128:18;;1115:32;;-1:-1:-1;1246:2:10;1231:18;;;1218:32;;773:509;-1:-1:-1;;;773:509:10:o;1643:127::-;1704:10;1699:3;1695:20;1692:1;1685:31;1735:4;1732:1;1725:15;1759:4;1756:1;1749:15;2837:400;3039:2;3021:21;;;3078:2;3058:18;;;3051:30;3117:34;3112:2;3097:18;;3090:62;-1:-1:-1;;;3183:2:10;3168:18;;3161:34;3227:3;3212:19;;2837:400::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    145,
    2486
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BD31CCD EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x91223D69 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF27D81B0 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x133 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x10E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420616E20617574686F726974792E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP2 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12B PUSH2 0x454 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x14D JUMPI PUSH2 0x14D PUSH2 0x454 JUMP JUMPDEST EQ PUSH2 0x192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506F6C69637934206973206E6F7420416374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x105 JUMP JUMPDEST PUSH1 0x3 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI PUSH2 0x1A6 PUSH2 0x454 JUMP JUMPDEST SUB PUSH2 0x27F JUMPI PUSH1 0x50 DUP4 LT PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4AF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x200 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x5375626A656374277320747275737420617070726F7665642100000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH2 0x3CA JUMP JUMPDEST PUSH32 0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3 PUSH1 0x40 MLOAD PUSH2 0x26F SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x5375626A6563742773207472757374206E6F7420617070726F76656421000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x293 JUMPI PUSH2 0x293 PUSH2 0x454 JUMP JUMPDEST SUB PUSH2 0x33A JUMPI PUSH1 0x32 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI POP PUSH1 0x32 DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4AF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x200 SWAP1 PUSH2 0x46A JUMP JUMPDEST PUSH32 0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3 PUSH1 0x40 MLOAD PUSH2 0x26F SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x5375626A65637427732026204F626A6563742773207472757374206E6F742061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x7070726F76656421 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x34E JUMPI PUSH2 0x34E PUSH2 0x454 JUMP JUMPDEST SUB PUSH2 0x382 JUMPI PUSH1 0x1E DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI POP PUSH1 0x1E DUP3 LT PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4AF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x200 SWAP1 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x396 JUMPI PUSH2 0x396 PUSH2 0x454 JUMP JUMPDEST SUB PUSH2 0x2CA JUMPI PUSH1 0xA DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI POP PUSH1 0xA DUP3 LT PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4AF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x200 SWAP1 PUSH2 0x46A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5375626A65637427732026204F626A656374277320747275737420617070726F PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x76656421 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID POP 0xE8 0xD4 PUSH14 0xCB719FFEAE31CDB40141820A1744 CALLDATACOPY BLOCKHASH ORIGIN 0xE7 LOG4 PUSH25 0x588D9300A568FBAEA2646970667358221220433A4A61221E98 0xC1 0x29 ADD PUSH30 0x523A1A59C85819FD6BAE987E53FCBE522088AF225364736F6C634300081A STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        145,
        2486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3BD31CCD"
    },
    "38": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "EQ",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x91223D69"
    },
    "49": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF27D81B0"
    },
    "60": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92"
    },
    "64": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        145,
        2486
      ],
      "op": "REVERT",
      "path": "6"
    },
    "70": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "71": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59"
    },
    "74": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x54"
    },
    "77": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "78": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "80": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D1"
    },
    "83": {
      "fn": "Policy4.setPolicyState",
      "jump": "i",
      "offset": [
        804,
        922
      ],
      "op": "JUMP",
      "path": "6"
    },
    "84": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "85": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA5"
    },
    "88": {
      "fn": "Policy4.setPolicyState",
      "jump": "i",
      "offset": [
        804,
        922
      ],
      "op": "JUMP",
      "path": "6"
    },
    "89": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "90": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "STOP",
      "path": "6"
    },
    "91": {
      "offset": [
        211,
        254
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "92": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E"
    },
    "95": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69"
    },
    "98": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "99": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "101": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F2"
    },
    "104": {
      "fn": "Policy4.setPolicyState",
      "jump": "i",
      "offset": [
        211,
        254
      ],
      "op": "JUMP",
      "path": "6"
    },
    "105": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "106": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "108": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "110": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "DUP2",
      "path": "6"
    },
    "111": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "112": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "113": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "114": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "DUP2",
      "path": "6"
    },
    "115": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "116": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "118": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "119": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "120": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "121": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "123": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "AND",
      "path": "6"
    },
    "124": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "DUP2",
      "path": "6"
    },
    "125": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "JUMP",
      "path": "6"
    },
    "126": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "127": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "129": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "130": {
      "op": "SWAP1"
    },
    "131": {
      "op": "ISZERO"
    },
    "132": {
      "op": "ISZERO"
    },
    "133": {
      "op": "DUP2"
    },
    "134": {
      "op": "MSTORE"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "137": {
      "op": "ADD"
    },
    "138": {
      "offset": [
        211,
        254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "140": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "141": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "142": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "143": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "SUB",
      "path": "6"
    },
    "144": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "145": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        211,
        254
      ],
      "op": "RETURN",
      "path": "6"
    },
    "146": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "147": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E"
    },
    "150": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0"
    },
    "153": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "154": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "156": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41B"
    },
    "159": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        924,
        2483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "160": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "161": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133"
    },
    "164": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        924,
        2483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "165": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "166": {
      "offset": [
        478,
        488
      ],
      "op": "CALLER",
      "path": "6"
    },
    "167": {
      "offset": [
        466,
        477
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "169": {
      "offset": [
        466,
        489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "170": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "DUP2",
      "path": "6"
    },
    "171": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "172": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "174": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "DUP2",
      "path": "6"
    },
    "175": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "176": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "177": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "179": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "180": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "181": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "182": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "184": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        489
      ],
      "op": "AND",
      "path": "6"
    },
    "185": {
      "offset": [
        466,
        497
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "186": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        466,
        497
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "187": {
      "offset": [
        466,
        489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "189": {
      "offset": [
        466,
        497
      ],
      "op": "EQ",
      "path": "6"
    },
    "190": {
      "offset": [
        458,
        529
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10E"
    },
    "193": {
      "offset": [
        458,
        529
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "194": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "196": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "offset": [
        458,
        529
      ],
      "op": "DUP2",
      "path": "6"
    },
    "205": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "offset": [
        458,
        529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "210": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "DUP3",
      "path": "6"
    },
    "211": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "ADD",
      "path": "6"
    },
    "212": {
      "op": "MSTORE"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "217": {
      "op": "DUP3"
    },
    "218": {
      "op": "ADD"
    },
    "219": {
      "op": "MSTORE"
    },
    "220": {
      "op": "PUSH32",
      "value": "0x53656E646572206973206E6F7420616E20617574686F726974792E0000000000"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "255": {
      "op": "DUP3"
    },
    "256": {
      "op": "ADD"
    },
    "257": {
      "op": "MSTORE"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "260": {
      "op": "ADD"
    },
    "261": {
      "offset": [
        458,
        529
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "262": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "264": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "265": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "DUP1",
      "path": "6"
    },
    "266": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "267": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "SUB",
      "path": "6"
    },
    "268": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "269": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "270": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        458,
        529
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "271": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        900
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x1"
    },
    "273": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "274": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "275": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        903,
        915
      ],
      "op": "DUP3",
      "path": "6"
    },
    "276": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        903,
        915
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "277": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "278": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "280": {
      "op": "NOT"
    },
    "281": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "AND",
      "path": "6"
    },
    "282": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        900
      ],
      "op": "DUP2",
      "path": "6"
    },
    "283": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        903,
        915
      ],
      "op": "DUP4",
      "path": "6"
    },
    "284": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "DUP2",
      "path": "6"
    },
    "285": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "DUP2",
      "path": "6"
    },
    "286": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "GT",
      "path": "6"
    },
    "287": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "288": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B"
    },
    "291": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "292": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B"
    },
    "295": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "298": {
      "fn": "Policy4.setPolicyState",
      "jump": "i",
      "offset": [
        889,
        915
      ],
      "op": "JUMP",
      "path": "6"
    },
    "299": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "300": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "MUL",
      "path": "6"
    },
    "301": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "OR",
      "path": "6"
    },
    "302": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "303": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "304": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        889,
        915
      ],
      "op": "POP",
      "path": "6"
    },
    "305": {
      "fn": "Policy4.setPolicyState",
      "offset": [
        804,
        922
      ],
      "op": "POP",
      "path": "6"
    },
    "306": {
      "fn": "Policy4.setPolicyState",
      "jump": "o",
      "offset": [
        804,
        922
      ],
      "op": "JUMP",
      "path": "6"
    },
    "307": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "308": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1040,
        1044
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "310": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1040,
        1044
      ],
      "op": "DUP1",
      "path": "6"
    },
    "311": {
      "offset": [
        595,
        606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "313": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        606
      ],
      "op": "DUP1",
      "path": "6"
    },
    "314": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        606
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "315": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "317": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        606
      ],
      "op": "AND",
      "path": "6"
    },
    "318": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        606
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "319": {
      "offset": [
        595,
        628
      ],
      "op": "DUP2",
      "path": "6"
    },
    "320": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "GT",
      "path": "6"
    },
    "321": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "322": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D"
    },
    "325": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "326": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D"
    },
    "329": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "332": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        595,
        628
      ],
      "op": "JUMP",
      "path": "6"
    },
    "333": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "334": {
      "branch": 9,
      "fn": "Policy4.checkPolicy",
      "offset": [
        595,
        628
      ],
      "op": "EQ",
      "path": "6"
    },
    "335": {
      "offset": [
        587,
        654
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "338": {
      "branch": 9,
      "offset": [
        587,
        654
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "339": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        587,
        654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "341": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        587,
        654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "348": {
      "op": "SHL"
    },
    "349": {
      "offset": [
        587,
        654
      ],
      "op": "DUP2",
      "path": "6"
    },
    "350": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        587,
        654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "353": {
      "offset": [
        587,
        654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "355": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        587,
        654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "356": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        587,
        654
      ],
      "op": "ADD",
      "path": "6"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "362": {
      "op": "DUP3"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "op": "MSTORE"
    },
    "365": {
      "op": "PUSH21",
      "value": "0x506F6C69637934206973206E6F7420416374697665"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "392": {
      "op": "DUP3"
    },
    "393": {
      "op": "ADD"
    },
    "394": {
      "op": "MSTORE"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "397": {
      "op": "ADD"
    },
    "398": {
      "offset": [
        587,
        654
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x105"
    },
    "401": {
      "op": "JUMP"
    },
    "402": {
      "offset": [
        587,
        654
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "403": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1072,
        1098
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "405": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1068
      ],
      "op": "DUP5",
      "path": "6"
    },
    "406": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "408": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP2",
      "path": "6"
    },
    "409": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "GT",
      "path": "6"
    },
    "410": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "411": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A6"
    },
    "414": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "415": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A6"
    },
    "418": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "421": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        1056,
        1098
      ],
      "op": "JUMP",
      "path": "6"
    },
    "422": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "423": {
      "branch": 10,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1056,
        1098
      ],
      "op": "SUB",
      "path": "6"
    },
    "424": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1052,
        2481
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27F"
    },
    "427": {
      "branch": 10,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1052,
        2481
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "428": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1128,
        1130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x50"
    },
    "430": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1115,
        1124
      ],
      "op": "DUP4",
      "path": "6"
    },
    "431": {
      "branch": 11,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1115,
        1130
      ],
      "op": "LT",
      "path": "6"
    },
    "432": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1111,
        1339
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x210"
    },
    "435": {
      "branch": 11,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1111,
        1339
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "438": {
      "op": "DUP1"
    },
    "439": {
      "op": "MLOAD"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "442": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "445": {
      "op": "DUP4"
    },
    "446": {
      "op": "CODECOPY"
    },
    "447": {
      "op": "DUP2"
    },
    "448": {
      "op": "MLOAD"
    },
    "449": {
      "op": "SWAP2"
    },
    "450": {
      "op": "MSTORE"
    },
    "451": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x40"
    },
    "453": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "454": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x200"
    },
    "457": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "460": {
      "op": "DUP1"
    },
    "461": {
      "op": "DUP3"
    },
    "462": {
      "op": "MSTORE"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "465": {
      "op": "SWAP1"
    },
    "466": {
      "op": "DUP3"
    },
    "467": {
      "op": "ADD"
    },
    "468": {
      "op": "MSTORE"
    },
    "469": {
      "op": "PUSH32",
      "value": "0x5375626A656374277320747275737420617070726F7665642100000000000000"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "504": {
      "op": "DUP3"
    },
    "505": {
      "op": "ADD"
    },
    "506": {
      "op": "MSTORE"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "509": {
      "op": "ADD"
    },
    "510": {
      "op": "SWAP1"
    },
    "511": {
      "op": "JUMP"
    },
    "512": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "513": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "515": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "516": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "DUP1",
      "path": "6"
    },
    "517": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "518": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "SUB",
      "path": "6"
    },
    "519": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "520": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1151,
        1194
      ],
      "op": "LOG1",
      "path": "6"
    },
    "521": {
      "op": "POP"
    },
    "522": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1216,
        1220
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "524": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1209,
        1220
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CA"
    },
    "527": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1209,
        1220
      ],
      "op": "JUMP",
      "path": "6"
    },
    "528": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1111,
        1339
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "529": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 3,
      "value": "0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3"
    },
    "562": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "564": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "565": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26F"
    },
    "568": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "571": {
      "op": "DUP1"
    },
    "572": {
      "op": "DUP3"
    },
    "573": {
      "op": "MSTORE"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "576": {
      "op": "SWAP1"
    },
    "577": {
      "op": "DUP3"
    },
    "578": {
      "op": "ADD"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "op": "PUSH32",
      "value": "0x5375626A6563742773207472757374206E6F7420617070726F76656421000000"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "615": {
      "op": "DUP3"
    },
    "616": {
      "op": "ADD"
    },
    "617": {
      "op": "MSTORE"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "SWAP1"
    },
    "622": {
      "op": "JUMP"
    },
    "623": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "624": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "626": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "627": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "DUP1",
      "path": "6"
    },
    "628": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "629": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "SUB",
      "path": "6"
    },
    "630": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "631": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1256,
        1301
      ],
      "op": "LOG1",
      "path": "6"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1323,
        1328
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x0"
    },
    "635": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1316,
        1328
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CA"
    },
    "638": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1316,
        1328
      ],
      "op": "JUMP",
      "path": "6"
    },
    "639": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1052,
        2481
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "640": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1375,
        1399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "642": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1371
      ],
      "op": "DUP5",
      "path": "6"
    },
    "643": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "645": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "DUP2",
      "path": "6"
    },
    "646": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "GT",
      "path": "6"
    },
    "647": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "648": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x293"
    },
    "651": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "652": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x293"
    },
    "655": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "658": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        1359,
        1399
      ],
      "op": "JUMP",
      "path": "6"
    },
    "659": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "660": {
      "branch": 12,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1359,
        1399
      ],
      "op": "SUB",
      "path": "6"
    },
    "661": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1355,
        2481
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33A"
    },
    "664": {
      "branch": 12,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1355,
        2481
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "665": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1428,
        1430
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x32"
    },
    "667": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1424
      ],
      "op": "DUP4",
      "path": "6"
    },
    "668": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1430
      ],
      "op": "LT",
      "path": "6"
    },
    "669": {
      "branch": 13,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1430
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "670": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1449
      ],
      "op": "DUP1",
      "path": "6"
    },
    "671": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1449
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "672": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AA"
    },
    "675": {
      "branch": 13,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1449
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "676": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1449
      ],
      "op": "POP",
      "path": "6"
    },
    "677": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1447,
        1449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x32"
    },
    "679": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1434,
        1443
      ],
      "op": "DUP3",
      "path": "6"
    },
    "680": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1434,
        1449
      ],
      "op": "LT",
      "path": "6"
    },
    "681": {
      "branch": 14,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1434,
        1449
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "682": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1415,
        1449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "683": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1411,
        1680
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "684": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1411,
        1680
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CA"
    },
    "687": {
      "branch": 14,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1411,
        1680
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "690": {
      "op": "DUP1"
    },
    "691": {
      "op": "MLOAD"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "694": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "697": {
      "op": "DUP4"
    },
    "698": {
      "op": "CODECOPY"
    },
    "699": {
      "op": "DUP2"
    },
    "700": {
      "op": "MLOAD"
    },
    "701": {
      "op": "SWAP2"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1470,
        1524
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x40"
    },
    "705": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1470,
        1524
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "706": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1470,
        1524
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x200"
    },
    "709": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1470,
        1524
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "710": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1470,
        1524
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46A"
    },
    "713": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        1470,
        1524
      ],
      "op": "JUMP",
      "path": "6"
    },
    "714": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1411,
        1680
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "715": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1586,
        1642
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 6,
      "value": "0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3"
    },
    "748": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1586,
        1642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "750": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1586,
        1642
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "751": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1586,
        1642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26F"
    },
    "754": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1586,
        1642
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "757": {
      "op": "DUP1"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "762": {
      "op": "SWAP1"
    },
    "763": {
      "op": "DUP3"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH32",
      "value": "0x5375626A65637427732026204F626A6563742773207472757374206E6F742061"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "801": {
      "op": "DUP3"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH8",
      "value": "0x7070726F76656421"
    },
    "813": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "815": {
      "op": "SHL"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "823": {
      "op": "ADD"
    },
    "824": {
      "op": "SWAP1"
    },
    "825": {
      "op": "JUMP"
    },
    "826": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1355,
        2481
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "827": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1716,
        1738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "829": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1712
      ],
      "op": "DUP5",
      "path": "6"
    },
    "830": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "832": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "DUP2",
      "path": "6"
    },
    "833": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "GT",
      "path": "6"
    },
    "834": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "835": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34E"
    },
    "838": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "839": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34E"
    },
    "842": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "845": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        1700,
        1738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "846": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "847": {
      "branch": 15,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1700,
        1738
      ],
      "op": "SUB",
      "path": "6"
    },
    "848": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1696,
        2481
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x382"
    },
    "851": {
      "branch": 15,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1696,
        2481
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "852": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1767,
        1769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1E"
    },
    "854": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1763
      ],
      "op": "DUP4",
      "path": "6"
    },
    "855": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1769
      ],
      "op": "LT",
      "path": "6"
    },
    "856": {
      "branch": 16,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1769
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "857": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1788
      ],
      "op": "DUP1",
      "path": "6"
    },
    "858": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1788
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "859": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1788
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AA"
    },
    "862": {
      "branch": 16,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1788
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "863": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1754,
        1788
      ],
      "op": "POP",
      "path": "6"
    },
    "864": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1786,
        1788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1E"
    },
    "866": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1773,
        1782
      ],
      "op": "DUP3",
      "path": "6"
    },
    "867": {
      "branch": 17,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1773,
        1788
      ],
      "op": "LT",
      "path": "6"
    },
    "868": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1750,
        2019
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CA"
    },
    "871": {
      "branch": 17,
      "fn": "Policy4.checkPolicy",
      "offset": [
        1750,
        2019
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "874": {
      "op": "DUP1"
    },
    "875": {
      "op": "MLOAD"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "878": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "881": {
      "op": "DUP4"
    },
    "882": {
      "op": "CODECOPY"
    },
    "883": {
      "op": "DUP2"
    },
    "884": {
      "op": "MLOAD"
    },
    "885": {
      "op": "SWAP2"
    },
    "886": {
      "op": "MSTORE"
    },
    "887": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1809,
        1863
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x40"
    },
    "889": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1809,
        1863
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "890": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1809,
        1863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x200"
    },
    "893": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1809,
        1863
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "894": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1809,
        1863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46A"
    },
    "897": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        1809,
        1863
      ],
      "op": "JUMP",
      "path": "6"
    },
    "898": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        1696,
        2481
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "899": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2055,
        2084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "901": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2051
      ],
      "op": "DUP5",
      "path": "6"
    },
    "902": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "904": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "DUP2",
      "path": "6"
    },
    "905": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "GT",
      "path": "6"
    },
    "906": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "907": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x396"
    },
    "910": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "911": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x396"
    },
    "914": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "917": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        2039,
        2084
      ],
      "op": "JUMP",
      "path": "6"
    },
    "918": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "919": {
      "branch": 18,
      "fn": "Policy4.checkPolicy",
      "offset": [
        2039,
        2084
      ],
      "op": "SUB",
      "path": "6"
    },
    "920": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2035,
        2481
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CA"
    },
    "923": {
      "branch": 18,
      "fn": "Policy4.checkPolicy",
      "offset": [
        2035,
        2481
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "924": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2113,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "926": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2109
      ],
      "op": "DUP4",
      "path": "6"
    },
    "927": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2115
      ],
      "op": "LT",
      "path": "6"
    },
    "928": {
      "branch": 19,
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2115
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "929": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2134
      ],
      "op": "DUP1",
      "path": "6"
    },
    "930": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2134
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "931": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AA"
    },
    "934": {
      "branch": 19,
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2134
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "935": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2100,
        2134
      ],
      "op": "POP",
      "path": "6"
    },
    "936": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2132,
        2134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "938": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2119,
        2128
      ],
      "op": "DUP3",
      "path": "6"
    },
    "939": {
      "branch": 20,
      "fn": "Policy4.checkPolicy",
      "offset": [
        2119,
        2134
      ],
      "op": "LT",
      "path": "6"
    },
    "940": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2096,
        2365
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CA"
    },
    "943": {
      "branch": 20,
      "fn": "Policy4.checkPolicy",
      "offset": [
        2096,
        2365
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "946": {
      "op": "DUP1"
    },
    "947": {
      "op": "MLOAD"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "950": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "953": {
      "op": "DUP4"
    },
    "954": {
      "op": "CODECOPY"
    },
    "955": {
      "op": "DUP2"
    },
    "956": {
      "op": "MLOAD"
    },
    "957": {
      "op": "SWAP2"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x40"
    },
    "961": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2155,
        2209
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "962": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x200"
    },
    "965": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2155,
        2209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "966": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46A"
    },
    "969": {
      "fn": "Policy4.checkPolicy",
      "jump": "i",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMP",
      "path": "6"
    },
    "970": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        2035,
        2481
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "971": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "972": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "973": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "POP",
      "path": "6"
    },
    "974": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "POP",
      "path": "6"
    },
    "975": {
      "fn": "Policy4.checkPolicy",
      "offset": [
        924,
        2483
      ],
      "op": "POP",
      "path": "6"
    },
    "976": {
      "fn": "Policy4.checkPolicy",
      "jump": "o",
      "offset": [
        924,
        2483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "977": {
      "op": "JUMPDEST"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "982": {
      "op": "DUP3"
    },
    "983": {
      "op": "DUP5"
    },
    "984": {
      "op": "SUB"
    },
    "985": {
      "op": "SLT"
    },
    "986": {
      "op": "ISZERO"
    },
    "987": {
      "op": "PUSH2",
      "value": "0x3E3"
    },
    "990": {
      "op": "JUMPI"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "993": {
      "op": "DUP1"
    },
    "994": {
      "op": "REVERT"
    },
    "995": {
      "op": "JUMPDEST"
    },
    "996": {
      "op": "DUP2"
    },
    "997": {
      "op": "CALLDATALOAD"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1000": {
      "op": "DUP2"
    },
    "1001": {
      "op": "LT"
    },
    "1002": {
      "op": "PUSH2",
      "value": "0x3CA"
    },
    "1005": {
      "op": "JUMPI"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1008": {
      "op": "DUP1"
    },
    "1009": {
      "op": "REVERT"
    },
    "1010": {
      "op": "JUMPDEST"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1015": {
      "op": "DUP3"
    },
    "1016": {
      "op": "DUP5"
    },
    "1017": {
      "op": "SUB"
    },
    "1018": {
      "op": "SLT"
    },
    "1019": {
      "op": "ISZERO"
    },
    "1020": {
      "op": "PUSH2",
      "value": "0x404"
    },
    "1023": {
      "op": "JUMPI"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1026": {
      "op": "DUP1"
    },
    "1027": {
      "op": "REVERT"
    },
    "1028": {
      "op": "JUMPDEST"
    },
    "1029": {
      "op": "DUP2"
    },
    "1030": {
      "op": "CALLDATALOAD"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "op": "SUB"
    },
    "1039": {
      "op": "DUP2"
    },
    "1040": {
      "op": "AND"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "EQ"
    },
    "1043": {
      "op": "PUSH2",
      "value": "0x3CA"
    },
    "1046": {
      "op": "JUMPI"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1049": {
      "op": "DUP1"
    },
    "1050": {
      "op": "REVERT"
    },
    "1051": {
      "op": "JUMPDEST"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1054": {
      "op": "DUP1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1059": {
      "op": "DUP5"
    },
    "1060": {
      "op": "DUP7"
    },
    "1061": {
      "op": "SUB"
    },
    "1062": {
      "op": "SLT"
    },
    "1063": {
      "op": "ISZERO"
    },
    "1064": {
      "op": "PUSH2",
      "value": "0x430"
    },
    "1067": {
      "op": "JUMPI"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1070": {
      "op": "DUP1"
    },
    "1071": {
      "op": "REVERT"
    },
    "1072": {
      "op": "JUMPDEST"
    },
    "1073": {
      "op": "DUP4"
    },
    "1074": {
      "op": "CALLDATALOAD"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1077": {
      "op": "DUP2"
    },
    "1078": {
      "op": "LT"
    },
    "1079": {
      "op": "PUSH2",
      "value": "0x43F"
    },
    "1082": {
      "op": "JUMPI"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1085": {
      "op": "DUP1"
    },
    "1086": {
      "op": "REVERT"
    },
    "1087": {
      "op": "JUMPDEST"
    },
    "1088": {
      "op": "SWAP6"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1091": {
      "op": "DUP6"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "CALLDATALOAD"
    },
    "1094": {
      "op": "SWAP6"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1098": {
      "op": "SWAP1"
    },
    "1099": {
      "op": "SWAP5"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "CALLDATALOAD"
    },
    "1102": {
      "op": "SWAP4"
    },
    "1103": {
      "op": "SWAP3"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "op": "POP"
    },
    "1107": {
      "jump": "o",
      "op": "JUMP"
    },
    "1108": {
      "op": "JUMPDEST"
    },
    "1109": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1119": {
      "op": "MSTORE"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1129": {
      "op": "REVERT"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1133": {
      "op": "DUP1"
    },
    "1134": {
      "op": "DUP3"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1138": {
      "op": "SWAP1"
    },
    "1139": {
      "op": "DUP3"
    },
    "1140": {
      "op": "ADD"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH32",
      "value": "0x5375626A65637427732026204F626A656374277320747275737420617070726F"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1177": {
      "op": "DUP3"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "op": "MSTORE"
    },
    "1180": {
      "op": "PUSH4",
      "value": "0x76656421"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1187": {
      "op": "SHL"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1190": {
      "op": "DUP3"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1195": {
      "op": "ADD"
    },
    "1196": {
      "op": "SWAP1"
    },
    "1197": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "020a89db167c726a6ef06dc9c651f92935ed15fc",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.17;\nimport \"contracts/SubjectAttribute.sol\";\nimport \"contracts/ObjectAttribute.sol\";\ncontract Policy4{\n    enum PolicyState {Active, Deactivated}\n\n    mapping(address => bool) public authorities;\n    // VARIABLES\n    PolicyState policyState;\n     //EVENTS\n    event AccessDenied( string message);\n    event AccessApproved( string message);\n    // MODIFIERS\n    modifier authorities_only(){\n        require(authorities[msg.sender] == true, \"Sender is not an authority.\");\n        _;\n    }\n    modifier onlyWhenActive(){\n        require(policyState == PolicyState.Active, \"Policy4 is not Active\");\n        _;\n    }\n    // CONSTRUCTOR\n    constructor(){\n        policyState = PolicyState.Active;\n        authorities[msg.sender] = true;\n    }\n\n    function setPolicyState(PolicyState _policyState) public authorities_only(){\n        policyState = _policyState;\n    }\n\nfunction checkPolicy(Device.Category sub_category, uint sub_trust, uint obj_trust) public onlyWhenActive() returns (bool) {\n    if (sub_category == Device.Category.Monitoring) { \n        if (sub_trust >= 80) {\n            emit AccessApproved(\"Subject's trust approved!\"); \n            return true;\n        } else {\n            emit AccessDenied(\"Subject's trust not approved!\"); \n            return false;\n        }\n    }\n    else if (sub_category == Device.Category.Security) {\n        if (sub_trust >= 50 && obj_trust >= 50) {\n            emit AccessApproved(\"Subject's & Object's trust approved!\"); \n            return true;\n        } else {\n            emit AccessDenied(\"Subject's & Object's trust not approved!\"); \n            return false;\n        }\n    }\n    else if (sub_category == Device.Category.Health) {\n        if (sub_trust >= 30 && obj_trust >= 30) {\n            emit AccessApproved(\"Subject's & Object's trust approved!\"); \n            return true;\n        } else {\n            emit AccessDenied(\"Subject's & Object's trust not approved!\"); \n            return false;\n        }\n    }\n    else if (sub_category == Device.Category.Entertainment) {\n        if (sub_trust >= 10 && obj_trust >= 10) {\n            emit AccessApproved(\"Subject's & Object's trust approved!\"); \n            return true;\n        } else {\n            emit AccessDenied(\"Subject's & Object's trust not approved!\"); \n            return false;\n        }\n    }\n    else{\n        emit AccessDenied(\"Subject's & Object's trust not approved!\"); \n        return false;\n    }\n}\n\n}",
  "sourceMap": "145:2341:6:-:0;;;696:102;;;;;;;;;-1:-1:-1;719:11:6;:32;;-1:-1:-1;;719:32:6;;;;;773:10;733:18;761:23;;;;;;;;;;:30;;;;;;;;;;145:2341;;;;;;",
  "sourcePath": "contracts/Policies/Policy4.sol",
  "type": "contract"
}