{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "AccessApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "AccessDenied",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorities",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Device.Category",
          "name": "sub_category",
          "type": "uint8"
        },
        {
          "internalType": "enum Device.Category",
          "name": "obj_category",
          "type": "uint8"
        }
      ],
      "name": "checkPolicy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Policy3.PolicyState",
          "name": "_policyState",
          "type": "uint8"
        }
      ],
      "name": "setPolicyState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Device.sol",
    "5": "contracts/Policies/Policy3.sol"
  },
  "ast": {
    "absolutePath": "contracts/Policies/Policy3.sol",
    "exportedSymbols": {
      "Device": [
        1739
      ],
      "ObjectAttribute": [
        455
      ],
      "Policy3": [
        2144
      ],
      "SubjectAttribute": [
        1723
      ]
    },
    "id": 2145,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2023,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:24:5"
      },
      {
        "absolutePath": "contracts/SubjectAttribute.sol",
        "file": "contracts/SubjectAttribute.sol",
        "id": 2024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2145,
        "sourceUnit": 1724,
        "src": "66:40:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ObjectAttribute.sol",
        "file": "contracts/ObjectAttribute.sol",
        "id": 2025,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2145,
        "sourceUnit": 456,
        "src": "108:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Policy3",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2144,
        "linearizedBaseContracts": [
          2144
        ],
        "name": "Policy3",
        "nameLocation": "158:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Policy3.PolicyState",
            "id": 2028,
            "members": [
              {
                "id": 2026,
                "name": "Active",
                "nameLocation": "190:6:5",
                "nodeType": "EnumValue",
                "src": "190:6:5"
              },
              {
                "id": 2027,
                "name": "Deactivated",
                "nameLocation": "198:11:5",
                "nodeType": "EnumValue",
                "src": "198:11:5"
              }
            ],
            "name": "PolicyState",
            "nameLocation": "177:11:5",
            "nodeType": "EnumDefinition",
            "src": "172:38:5"
          },
          {
            "constant": false,
            "functionSelector": "91223d69",
            "id": 2032,
            "mutability": "mutable",
            "name": "authorities",
            "nameLocation": "250:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 2144,
            "src": "218:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2031,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2029,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "226:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "218:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2030,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "237:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2035,
            "mutability": "mutable",
            "name": "policyState",
            "nameLocation": "298:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 2144,
            "src": "286:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PolicyState_$2028",
              "typeString": "enum Policy3.PolicyState"
            },
            "typeName": {
              "id": 2034,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2033,
                "name": "PolicyState",
                "nameLocations": [
                  "286:11:5"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2028,
                "src": "286:11:5"
              },
              "referencedDeclaration": 2028,
              "src": "286:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PolicyState_$2028",
                "typeString": "enum Policy3.PolicyState"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "fa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f3",
            "id": 2039,
            "name": "AccessDenied",
            "nameLocation": "337:12:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "358:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "351:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:17:5"
            },
            "src": "331:36:5"
          },
          {
            "anonymous": false,
            "eventSelector": "50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae",
            "id": 2043,
            "name": "AccessApproved",
            "nameLocation": "379:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2041,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "402:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "395:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2040,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:17:5"
            },
            "src": "373:38:5"
          },
          {
            "body": {
              "id": 2056,
              "nodeType": "Block",
              "src": "462:102:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2046,
                            "name": "authorities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2032,
                            "src": "481:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2049,
                          "indexExpression": {
                            "expression": {
                              "id": 2047,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "493:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "497:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "493:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "481:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 2050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "508:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "481:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616e20617574686f726974792e",
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "514:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_163f4de8b69521479251ff5c78e4858f62ef471f12abb64a835e0a68fc65d99c",
                          "typeString": "literal_string \"Sender is not an authority.\""
                        },
                        "value": "Sender is not an authority."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_163f4de8b69521479251ff5c78e4858f62ef471f12abb64a835e0a68fc65d99c",
                          "typeString": "literal_string \"Sender is not an authority.\""
                        }
                      ],
                      "id": 2045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "473:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "473:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "473:71:5"
                },
                {
                  "id": 2055,
                  "nodeType": "PlaceholderStatement",
                  "src": "555:1:5"
                }
              ]
            },
            "id": 2057,
            "name": "authorities_only",
            "nameLocation": "444:16:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:2:5"
            },
            "src": "435:129:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "595:98:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyState_$2028",
                          "typeString": "enum Policy3.PolicyState"
                        },
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2060,
                          "name": "policyState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2035,
                          "src": "614:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyState_$2028",
                            "typeString": "enum Policy3.PolicyState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2061,
                            "name": "PolicyState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2028,
                            "src": "629:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyState_$2028_$",
                              "typeString": "type(enum Policy3.PolicyState)"
                            }
                          },
                          "id": 2062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "641:6:5",
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2026,
                          "src": "629:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyState_$2028",
                            "typeString": "enum Policy3.PolicyState"
                          }
                        },
                        "src": "614:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c69637933206973206e6f7420416374697665",
                        "id": 2064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "649:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6579a67f7a50ced91ddb4cf065a12d29a0402ea5eceafb402f0b8b012df625b",
                          "typeString": "literal_string \"Policy3 is not Active\""
                        },
                        "value": "Policy3 is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6579a67f7a50ced91ddb4cf065a12d29a0402ea5eceafb402f0b8b012df625b",
                          "typeString": "literal_string \"Policy3 is not Active\""
                        }
                      ],
                      "id": 2059,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "606:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2066,
                  "nodeType": "ExpressionStatement",
                  "src": "606:67:5"
                },
                {
                  "id": 2067,
                  "nodeType": "PlaceholderStatement",
                  "src": "684:1:5"
                }
              ]
            },
            "id": 2069,
            "name": "onlyWhenActive",
            "nameLocation": "579:14:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:5"
            },
            "src": "570:123:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2084,
              "nodeType": "Block",
              "src": "732:92:5",
              "statements": [
                {
                  "expression": {
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2072,
                      "name": "policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2035,
                      "src": "743:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$2028",
                        "typeString": "enum Policy3.PolicyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2073,
                        "name": "PolicyState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "757:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyState_$2028_$",
                          "typeString": "type(enum Policy3.PolicyState)"
                        }
                      },
                      "id": 2074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "769:6:5",
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2026,
                      "src": "757:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$2028",
                        "typeString": "enum Policy3.PolicyState"
                      }
                    },
                    "src": "743:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$2028",
                      "typeString": "enum Policy3.PolicyState"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "743:32:5"
                },
                {
                  "expression": {
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2077,
                        "name": "authorities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2032,
                        "src": "786:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2080,
                      "indexExpression": {
                        "expression": {
                          "id": 2078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "798:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "802:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "798:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "786:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "786:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "786:30:5"
                }
              ]
            },
            "id": 2085,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:2:5"
            },
            "returnParameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:5"
            },
            "scope": 2144,
            "src": "719:105:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2097,
              "nodeType": "Block",
              "src": "907:45:5",
              "statements": [
                {
                  "expression": {
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2093,
                      "name": "policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2035,
                      "src": "918:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$2028",
                        "typeString": "enum Policy3.PolicyState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2094,
                      "name": "_policyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2088,
                      "src": "932:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyState_$2028",
                        "typeString": "enum Policy3.PolicyState"
                      }
                    },
                    "src": "918:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$2028",
                      "typeString": "enum Policy3.PolicyState"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "918:26:5"
                }
              ]
            },
            "functionSelector": "3bd31ccd",
            "id": 2098,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 2091,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2090,
                  "name": "authorities_only",
                  "nameLocations": [
                    "889:16:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2057,
                  "src": "889:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "889:18:5"
              }
            ],
            "name": "setPolicyState",
            "nameLocation": "841:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "_policyState",
                  "nameLocation": "868:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2098,
                  "src": "856:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PolicyState_$2028",
                    "typeString": "enum Policy3.PolicyState"
                  },
                  "typeName": {
                    "id": 2087,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2086,
                      "name": "PolicyState",
                      "nameLocations": [
                        "856:11:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2028,
                      "src": "856:11:5"
                    },
                    "referencedDeclaration": 2028,
                    "src": "856:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyState_$2028",
                      "typeString": "enum Policy3.PolicyState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "855:26:5"
            },
            "returnParameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:5"
            },
            "scope": 2144,
            "src": "832:120:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2142,
              "nodeType": "Block",
              "src": "1082:451:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Category_$1734",
                      "typeString": "enum Device.Category"
                    },
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2111,
                      "name": "sub_category",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2101,
                      "src": "1096:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1734",
                        "typeString": "enum Device.Category"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 2112,
                          "name": "Device",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1739,
                          "src": "1112:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Device_$1739_$",
                            "typeString": "type(library Device)"
                          }
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1119:8:5",
                        "memberName": "Category",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1734,
                        "src": "1112:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Category_$1734_$",
                          "typeString": "type(enum Device.Category)"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1128:10:5",
                      "memberName": "Monitoring",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1733,
                      "src": "1112:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1734",
                        "typeString": "enum Device.Category"
                      }
                    },
                    "src": "1096:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Category_$1734",
                        "typeString": "enum Device.Category"
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2123,
                        "name": "sub_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2101,
                        "src": "1256:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1734",
                          "typeString": "enum Device.Category"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 2124,
                        "name": "obj_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "1272:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1734",
                          "typeString": "enum Device.Category"
                        }
                      },
                      "src": "1256:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2139,
                      "nodeType": "Block",
                      "src": "1408:114:5",
                      "statements": [
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "hexValue": "5375626a65637420616e64204f626a6563742043617465676f7279206d69736d6174636821",
                                "id": 2134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1442:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2b883c387fee8535a3caf9d6c0030584175db5104eb812d6b5f5a5746b378971",
                                  "typeString": "literal_string \"Subject and Object Category mismatch!\""
                                },
                                "value": "Subject and Object Category mismatch!"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_2b883c387fee8535a3caf9d6c0030584175db5104eb812d6b5f5a5746b378971",
                                  "typeString": "literal_string \"Subject and Object Category mismatch!\""
                                }
                              ],
                              "id": 2133,
                              "name": "AccessDenied",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "1428:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory)"
                              }
                            },
                            "id": 2135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1428:54:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2136,
                          "nodeType": "EmitStatement",
                          "src": "1423:59:5"
                        },
                        {
                          "expression": {
                            "hexValue": "66616c7365",
                            "id": 2137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1504:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 2110,
                          "id": 2138,
                          "nodeType": "Return",
                          "src": "1497:12:5"
                        }
                      ]
                    },
                    "id": 2140,
                    "nodeType": "IfStatement",
                    "src": "1253:269:5",
                    "trueBody": {
                      "id": 2132,
                      "nodeType": "Block",
                      "src": "1286:108:5",
                      "statements": [
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "hexValue": "5375626a65637420616e64204f626a6563742043617465676f7279206d6174636821",
                                "id": 2127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1322:36:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ca8bcf0696cc04cee6d17c2f79999516bd0954b94145b119bd1e3fdbc922d4e7",
                                  "typeString": "literal_string \"Subject and Object Category match!\""
                                },
                                "value": "Subject and Object Category match!"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_ca8bcf0696cc04cee6d17c2f79999516bd0954b94145b119bd1e3fdbc922d4e7",
                                  "typeString": "literal_string \"Subject and Object Category match!\""
                                }
                              ],
                              "id": 2126,
                              "name": "AccessApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2043,
                              "src": "1307:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory)"
                              }
                            },
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1307:52:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2129,
                          "nodeType": "EmitStatement",
                          "src": "1302:57:5"
                        },
                        {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 2130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1378:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 2110,
                          "id": 2131,
                          "nodeType": "Return",
                          "src": "1371:11:5"
                        }
                      ]
                    }
                  },
                  "id": 2141,
                  "nodeType": "IfStatement",
                  "src": "1093:429:5",
                  "trueBody": {
                    "id": 2122,
                    "nodeType": "Block",
                    "src": "1139:99:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "5375626a6563742069732061204d6f6e69746f722021",
                              "id": 2117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1174:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_db522e5d446b148dc29172bb89c06902b853e3c7d142c6cb6bf0aa62a86b0148",
                                "typeString": "literal_string \"Subject is a Monitor !\""
                              },
                              "value": "Subject is a Monitor !"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_db522e5d446b148dc29172bb89c06902b853e3c7d142c6cb6bf0aa62a86b0148",
                                "typeString": "literal_string \"Subject is a Monitor !\""
                              }
                            ],
                            "id": 2116,
                            "name": "AccessApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "1159:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1159:40:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2119,
                        "nodeType": "EmitStatement",
                        "src": "1154:45:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1222:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2110,
                        "id": 2121,
                        "nodeType": "Return",
                        "src": "1215:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2269e210",
            "id": 2143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 2107,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2106,
                  "name": "onlyWhenActive",
                  "nameLocations": [
                    "1051:14:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2069,
                  "src": "1051:14:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1051:16:5"
              }
            ],
            "name": "checkPolicy",
            "nameLocation": "969:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "sub_category",
                  "nameLocation": "997:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2143,
                  "src": "981:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Category_$1734",
                    "typeString": "enum Device.Category"
                  },
                  "typeName": {
                    "id": 2100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2099,
                      "name": "Device.Category",
                      "nameLocations": [
                        "981:6:5",
                        "988:8:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1734,
                      "src": "981:15:5"
                    },
                    "referencedDeclaration": 1734,
                    "src": "981:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Category_$1734",
                      "typeString": "enum Device.Category"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2104,
                  "mutability": "mutable",
                  "name": "obj_category",
                  "nameLocation": "1028:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 2143,
                  "src": "1012:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Category_$1734",
                    "typeString": "enum Device.Category"
                  },
                  "typeName": {
                    "id": 2103,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2102,
                      "name": "Device.Category",
                      "nameLocations": [
                        "1012:6:5",
                        "1019:8:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1734,
                      "src": "1012:15:5"
                    },
                    "referencedDeclaration": 1734,
                    "src": "1012:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Category_$1734",
                      "typeString": "enum Device.Category"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:62:5"
            },
            "returnParameters": {
              "id": 2110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2143,
                  "src": "1077:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:6:5"
            },
            "scope": 2144,
            "src": "960:573:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2145,
        "src": "149:1387:5",
        "usedErrors": [],
        "usedEvents": [
          2039,
          2043
        ]
      }
    ],
    "src": "40:1496:5"
  },
  "bytecode": "6080604052348015600f57600080fd5b506001805460ff19908116825533600090815260208190526040902080549091169091179055610409806100446000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632269e210146100465780633bd31ccd1461006d57806391223d6914610082575b600080fd5b610059610054366004610339565b6100a5565b604051901515815260200160405180910390f35b61008061007b36600461036c565b61029c565b005b610059610090366004610394565b60006020819052908152604090205460ff1681565b6000806001805460ff16908111156100bf576100bf6103bd565b146101095760405162461bcd60e51b8152602060048201526015602482015274506f6c69637933206973206e6f742041637469766560581b60448201526064015b60405180910390fd5b600383600381111561011d5761011d6103bd565b0361018a577f50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae60405161017a906020808252601690820152755375626a6563742069732061204d6f6e69746f72202160501b604082015260600190565b60405180910390a1506001610296565b81600381111561019c5761019c6103bd565b8360038111156101ae576101ae6103bd565b0361021d577f50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae60405161017a9060208082526022908201527f5375626a65637420616e64204f626a6563742043617465676f7279206d617463604082015261682160f01b606082015260800190565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f360405161028a9060208082526025908201527f5375626a65637420616e64204f626a6563742043617465676f7279206d69736d604082015264617463682160d81b606082015260800190565b60405180910390a15060005b92915050565b3360009081526020819052604090205460ff1615156001146103005760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206973206e6f7420616e20617574686f726974792e00000000006044820152606401610100565b6001805482919060ff191681838181111561031d5761031d6103bd565b021790555050565b80356004811061033457600080fd5b919050565b6000806040838503121561034c57600080fd5b61035583610325565b915061036360208401610325565b90509250929050565b60006020828403121561037e57600080fd5b81356002811061038d57600080fd5b9392505050565b6000602082840312156103a657600080fd5b81356001600160a01b038116811461038d57600080fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212200858e815e04e797d5ebb8fa3471b15e240f13791ce8a84605adfce379aa222b764736f6c634300081a0033",
  "bytecodeSha1": "4d896c5f12abe4afc36ff90a9bfe7ed5142d1179",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.26+commit.8a97fa7a"
  },
  "contractName": "Policy3",
  "coverageMap": {
    "branches": {
      "0": {},
      "5": {
        "Policy3.checkPolicy": {
          "6": [
            614,
            647,
            true
          ],
          "7": [
            1096,
            1138,
            false
          ],
          "8": [
            1256,
            1284,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "5": {
        "Policy3.checkPolicy": {
          "0": [
            1154,
            1199
          ],
          "1": [
            1215,
            1226
          ],
          "2": [
            1302,
            1359
          ],
          "3": [
            1423,
            1482
          ],
          "4": [
            1497,
            1509
          ]
        },
        "Policy3.setPolicyState": {
          "5": [
            918,
            944
          ]
        }
      }
    }
  },
  "dependencies": [
    "Device"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632269e210146100465780633bd31ccd1461006d57806391223d6914610082575b600080fd5b610059610054366004610339565b6100a5565b604051901515815260200160405180910390f35b61008061007b36600461036c565b61029c565b005b610059610090366004610394565b60006020819052908152604090205460ff1681565b6000806001805460ff16908111156100bf576100bf6103bd565b146101095760405162461bcd60e51b8152602060048201526015602482015274506f6c69637933206973206e6f742041637469766560581b60448201526064015b60405180910390fd5b600383600381111561011d5761011d6103bd565b0361018a577f50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae60405161017a906020808252601690820152755375626a6563742069732061204d6f6e69746f72202160501b604082015260600190565b60405180910390a1506001610296565b81600381111561019c5761019c6103bd565b8360038111156101ae576101ae6103bd565b0361021d577f50e8d46dcb719ffeae31cdb40141820a1744374032e7a478588d9300a568fbae60405161017a9060208082526022908201527f5375626a65637420616e64204f626a6563742043617465676f7279206d617463604082015261682160f01b606082015260800190565b7ffa521b2cccdb4e77c7c910f706a01f10d54ad95a00ae5eca7241972e5b3d24f360405161028a9060208082526025908201527f5375626a65637420616e64204f626a6563742043617465676f7279206d69736d604082015264617463682160d81b606082015260800190565b60405180910390a15060005b92915050565b3360009081526020819052604090205460ff1615156001146103005760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206973206e6f7420616e20617574686f726974792e00000000006044820152606401610100565b6001805482919060ff191681838181111561031d5761031d6103bd565b021790555050565b80356004811061033457600080fd5b919050565b6000806040838503121561034c57600080fd5b61035583610325565b915061036360208401610325565b90509250929050565b60006020828403121561037e57600080fd5b81356002811061038d57600080fd5b9392505050565b6000602082840312156103a657600080fd5b81356001600160a01b038116811461038d57600080fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212200858e815e04e797d5ebb8fa3471b15e240f13791ce8a84605adfce379aa222b764736f6c634300081a0033",
  "deployedSourceMap": "149:1387:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:573;;;;;;:::i;:::-;;:::i;:::-;;;636:14:10;;629:22;611:41;;599:2;584:18;960:573:5;;;;;;;832:120;;;;;;:::i;:::-;;:::i;:::-;;218:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;960:573;1077:4;;614:11;;;;;;:33;;;;;;;:::i;:::-;;606:67;;;;-1:-1:-1;;;606:67:5;;1565:2:10;606:67:5;;;1547:21:10;1604:2;1584:18;;;1577:30;-1:-1:-1;;;1623:18:10;;;1616:51;1684:18;;606:67:5;;;;;;;;;1112:26:::1;1096:12;:42;;;;;;;;:::i;:::-;::::0;1093:429:::1;;1159:40;;;;;1915:2:10::0;1897:21;;;1954:2;1934:18;;;1927:30;-1:-1:-1;;;1988:2:10;1973:18;;1966:52;2050:2;2035:18;;1713:346;1159:40:5::1;;;;;;;;-1:-1:-1::0;1222:4:5::1;1215:11;;1093:429;1272:12;1256:28;;;;;;;;:::i;:::-;:12;:28;;;;;;;;:::i;:::-;::::0;1253:269:::1;;1307:52;;;;;2266:2:10::0;2248:21;;;2305:2;2285:18;;;2278:30;2344:34;2339:2;2324:18;;2317:62;-1:-1:-1;;;2410:2:10;2395:18;;2388:32;2452:3;2437:19;;2064:398;1253:269:5::1;1428:54;;;;;2669:2:10::0;2651:21;;;2708:2;2688:18;;;2681:30;2747:34;2742:2;2727:18;;2720:62;-1:-1:-1;;;2813:2:10;2798:18;;2791:35;2858:3;2843:19;;2467:401;1428:54:5::1;;;;;;;;-1:-1:-1::0;1504:5:5::1;1253:269;960:573:::0;;;;:::o;832:120::-;493:10;481:11;:23;;;;;;;;;;;;;:31;;:23;:31;473:71;;;;-1:-1:-1;;;473:71:5;;3075:2:10;473:71:5;;;3057:21:10;3114:2;3094:18;;;3087:30;3153:29;3133:18;;;3126:57;3200:18;;473:71:5;2873:351:10;473:71:5;918:11:::1;:26:::0;;932:12;;918:11;-1:-1:-1;;918:26:5::1;:11:::0;932:12;918:26;;::::1;;;;;;:::i;:::-;;;;;;832:120:::0;:::o;14:149:10:-;88:20;;137:1;127:12;;117:40;;153:1;150;143:12;117:40;14:149;;;:::o;168:298::-;262:6;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;362:35;387:9;362:35;:::i;:::-;352:45;;416:44;456:2;445:9;441:18;416:44;:::i;:::-;406:54;;168:298;;;;;:::o;663:272::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;846:9;833:23;885:1;878:5;875:12;865:40;;901:1;898;891:12;865:40;924:5;663:272;-1:-1:-1;;;663:272:10:o;940:286::-;999:6;1052:2;1040:9;1031:7;1027:23;1023:32;1020:52;;;1068:1;1065;1058:12;1020:52;1094:23;;-1:-1:-1;;;;;1146:31:10;;1136:42;;1126:70;;1192:1;1189;1182:12;1231:127;1292:10;1287:3;1283:20;1280:1;1273:31;1323:4;1320:1;1313:15;1347:4;1344:1;1337:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    149,
    1536
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2269E210 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3BD31CCD EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x91223D69 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x80 PUSH2 0x7B CALLDATASIZE PUSH1 0x4 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xBF JUMPI PUSH2 0xBF PUSH2 0x3BD JUMP JUMPDEST EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506F6C69637933206973206E6F7420416374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11D JUMPI PUSH2 0x11D PUSH2 0x3BD JUMP JUMPDEST SUB PUSH2 0x18A JUMPI PUSH32 0x50E8D46DCB719FFEAE31CDB40141820A1744374032E7A478588D9300A568FBAE PUSH1 0x40 MLOAD PUSH2 0x17A SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x5375626A6563742069732061204D6F6E69746F722021 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH2 0x296 JUMP JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19C JUMPI PUSH2 0x19C PUSH2 0x3BD JUMP JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AE JUMPI PUSH2 0x1AE PUSH2 0x3BD JUMP JUMPDEST SUB PUSH2 0x21D JUMPI PUSH32 0x50E8D46DCB719FFEAE31CDB40141820A1744374032E7A478588D9300A568FBAE PUSH1 0x40 MLOAD PUSH2 0x17A SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5375626A65637420616E64204F626A6563742043617465676F7279206D617463 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6821 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3 PUSH1 0x40 MLOAD PUSH2 0x28A SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x5375626A65637420616E64204F626A6563742043617465676F7279206D69736D PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6174636821 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420616E20617574686F726974792E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x100 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP2 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x31D JUMPI PUSH2 0x31D PUSH2 0x3BD JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x355 DUP4 PUSH2 0x325 JUMP JUMPDEST SWAP2 POP PUSH2 0x363 PUSH1 0x20 DUP5 ADD PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD PC 0xE8 ISZERO 0xE0 0x4E PUSH26 0x7D5EBB8FA3471B15E240F13791CE8A84605ADFCE379AA222B764 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        149,
        1536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2269E210"
    },
    "38": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "EQ",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3BD31CCD"
    },
    "49": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6D"
    },
    "53": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x91223D69"
    },
    "60": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x82"
    },
    "64": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "DUP1",
      "path": "5"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        149,
        1536
      ],
      "op": "REVERT",
      "path": "5"
    },
    "70": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "71": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x59"
    },
    "74": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x54"
    },
    "77": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "78": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "80": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x339"
    },
    "83": {
      "fn": "Policy3.checkPolicy",
      "jump": "i",
      "offset": [
        960,
        1533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "84": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "85": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5"
    },
    "88": {
      "fn": "Policy3.checkPolicy",
      "jump": "i",
      "offset": [
        960,
        1533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "89": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "90": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "92": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "93": {
      "op": "SWAP1"
    },
    "94": {
      "op": "ISZERO"
    },
    "95": {
      "op": "ISZERO"
    },
    "96": {
      "op": "DUP2"
    },
    "97": {
      "op": "MSTORE"
    },
    "98": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "100": {
      "op": "ADD"
    },
    "101": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "103": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "104": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "DUP1",
      "path": "5"
    },
    "105": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "106": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "SUB",
      "path": "5"
    },
    "107": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "108": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "RETURN",
      "path": "5"
    },
    "109": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "110": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80"
    },
    "113": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B"
    },
    "116": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "117": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "119": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "122": {
      "fn": "Policy3.setPolicyState",
      "jump": "i",
      "offset": [
        832,
        952
      ],
      "op": "JUMP",
      "path": "5"
    },
    "123": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "124": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29C"
    },
    "127": {
      "fn": "Policy3.setPolicyState",
      "jump": "i",
      "offset": [
        832,
        952
      ],
      "op": "JUMP",
      "path": "5"
    },
    "128": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "129": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "STOP",
      "path": "5"
    },
    "130": {
      "offset": [
        218,
        261
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "131": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x59"
    },
    "134": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90"
    },
    "137": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "138": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "140": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x394"
    },
    "143": {
      "fn": "Policy3.setPolicyState",
      "jump": "i",
      "offset": [
        218,
        261
      ],
      "op": "JUMP",
      "path": "5"
    },
    "144": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "145": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "147": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "149": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "150": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "151": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "152": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "153": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "154": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "155": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "157": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "158": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "159": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "160": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "162": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "AND",
      "path": "5"
    },
    "163": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "164": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        218,
        261
      ],
      "op": "JUMP",
      "path": "5"
    },
    "165": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "166": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1077,
        1081
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "168": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1077,
        1081
      ],
      "op": "DUP1",
      "path": "5"
    },
    "169": {
      "offset": [
        614,
        625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "171": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        625
      ],
      "op": "DUP1",
      "path": "5"
    },
    "172": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        625
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "173": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        625
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "175": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        625
      ],
      "op": "AND",
      "path": "5"
    },
    "176": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "177": {
      "offset": [
        614,
        647
      ],
      "op": "DUP2",
      "path": "5"
    },
    "178": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "GT",
      "path": "5"
    },
    "179": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "180": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBF"
    },
    "183": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "184": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBF"
    },
    "187": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "190": {
      "fn": "Policy3.checkPolicy",
      "jump": "i",
      "offset": [
        614,
        647
      ],
      "op": "JUMP",
      "path": "5"
    },
    "191": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "192": {
      "branch": 6,
      "fn": "Policy3.checkPolicy",
      "offset": [
        614,
        647
      ],
      "op": "EQ",
      "path": "5"
    },
    "193": {
      "offset": [
        606,
        673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109"
    },
    "196": {
      "branch": 6,
      "offset": [
        606,
        673
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "197": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "199": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "206": {
      "op": "SHL"
    },
    "207": {
      "offset": [
        606,
        673
      ],
      "op": "DUP2",
      "path": "5"
    },
    "208": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "211": {
      "offset": [
        606,
        673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "213": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "DUP3",
      "path": "5"
    },
    "214": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "ADD",
      "path": "5"
    },
    "215": {
      "op": "MSTORE"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "220": {
      "op": "DUP3"
    },
    "221": {
      "op": "ADD"
    },
    "222": {
      "op": "MSTORE"
    },
    "223": {
      "op": "PUSH21",
      "value": "0x506F6C69637933206973206E6F7420416374697665"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "250": {
      "op": "DUP3"
    },
    "251": {
      "op": "ADD"
    },
    "252": {
      "op": "MSTORE"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "255": {
      "op": "ADD"
    },
    "256": {
      "offset": [
        606,
        673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "257": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "259": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "260": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "DUP1",
      "path": "5"
    },
    "261": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "262": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "SUB",
      "path": "5"
    },
    "263": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "264": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "265": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        606,
        673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "266": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1112,
        1138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "268": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1108
      ],
      "op": "DUP4",
      "path": "5"
    },
    "269": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "271": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "DUP2",
      "path": "5"
    },
    "272": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "GT",
      "path": "5"
    },
    "273": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "274": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11D"
    },
    "277": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "278": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11D"
    },
    "281": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "284": {
      "fn": "Policy3.checkPolicy",
      "jump": "i",
      "offset": [
        1096,
        1138
      ],
      "op": "JUMP",
      "path": "5"
    },
    "285": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "286": {
      "branch": 7,
      "fn": "Policy3.checkPolicy",
      "offset": [
        1096,
        1138
      ],
      "op": "SUB",
      "path": "5"
    },
    "287": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1093,
        1522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18A"
    },
    "290": {
      "branch": 7,
      "fn": "Policy3.checkPolicy",
      "offset": [
        1093,
        1522
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "291": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 0,
      "value": "0x50E8D46DCB719FFEAE31CDB40141820A1744374032E7A478588D9300A568FBAE"
    },
    "324": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "326": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "327": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17A"
    },
    "330": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "333": {
      "op": "DUP1"
    },
    "334": {
      "op": "DUP3"
    },
    "335": {
      "op": "MSTORE"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "338": {
      "op": "SWAP1"
    },
    "339": {
      "op": "DUP3"
    },
    "340": {
      "op": "ADD"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "op": "PUSH22",
      "value": "0x5375626A6563742069732061204D6F6E69746F722021"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "367": {
      "op": "SHL"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "370": {
      "op": "DUP3"
    },
    "371": {
      "op": "ADD"
    },
    "372": {
      "op": "MSTORE"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "375": {
      "op": "ADD"
    },
    "376": {
      "op": "SWAP1"
    },
    "377": {
      "op": "JUMP"
    },
    "378": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "379": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "381": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "382": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "DUP1",
      "path": "5"
    },
    "383": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "384": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "SUB",
      "path": "5"
    },
    "385": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "386": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1159,
        1199
      ],
      "op": "LOG1",
      "path": "5"
    },
    "387": {
      "op": "POP"
    },
    "388": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1222,
        1226
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x1"
    },
    "390": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1215,
        1226
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x296"
    },
    "393": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1215,
        1226
      ],
      "op": "JUMP",
      "path": "5"
    },
    "394": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1093,
        1522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "395": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1272,
        1284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "396": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "398": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "399": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "GT",
      "path": "5"
    },
    "400": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "401": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C"
    },
    "404": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "405": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C"
    },
    "408": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "411": {
      "fn": "Policy3.checkPolicy",
      "jump": "i",
      "offset": [
        1256,
        1284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "412": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "413": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1268
      ],
      "op": "DUP4",
      "path": "5"
    },
    "414": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "416": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "417": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "GT",
      "path": "5"
    },
    "418": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "419": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE"
    },
    "422": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "423": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE"
    },
    "426": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "429": {
      "fn": "Policy3.checkPolicy",
      "jump": "i",
      "offset": [
        1256,
        1284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "430": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "431": {
      "branch": 8,
      "fn": "Policy3.checkPolicy",
      "offset": [
        1256,
        1284
      ],
      "op": "SUB",
      "path": "5"
    },
    "432": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1253,
        1522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21D"
    },
    "435": {
      "branch": 8,
      "fn": "Policy3.checkPolicy",
      "offset": [
        1253,
        1522
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "436": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1307,
        1359
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 2,
      "value": "0x50E8D46DCB719FFEAE31CDB40141820A1744374032E7A478588D9300A568FBAE"
    },
    "469": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1307,
        1359
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "471": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1307,
        1359
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "472": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1307,
        1359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17A"
    },
    "475": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1307,
        1359
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "478": {
      "op": "DUP1"
    },
    "479": {
      "op": "DUP3"
    },
    "480": {
      "op": "MSTORE"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "483": {
      "op": "SWAP1"
    },
    "484": {
      "op": "DUP3"
    },
    "485": {
      "op": "ADD"
    },
    "486": {
      "op": "MSTORE"
    },
    "487": {
      "op": "PUSH32",
      "value": "0x5375626A65637420616E64204F626A6563742043617465676F7279206D617463"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "522": {
      "op": "DUP3"
    },
    "523": {
      "op": "ADD"
    },
    "524": {
      "op": "MSTORE"
    },
    "525": {
      "op": "PUSH2",
      "value": "0x6821"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "533": {
      "op": "DUP3"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "op": "MSTORE"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "538": {
      "op": "ADD"
    },
    "539": {
      "op": "SWAP1"
    },
    "540": {
      "op": "JUMP"
    },
    "541": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1253,
        1522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "542": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 3,
      "value": "0xFA521B2CCCDB4E77C7C910F706A01F10D54AD95A00AE5ECA7241972E5B3D24F3"
    },
    "575": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "577": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "578": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28A"
    },
    "581": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "584": {
      "op": "DUP1"
    },
    "585": {
      "op": "DUP3"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "589": {
      "op": "SWAP1"
    },
    "590": {
      "op": "DUP3"
    },
    "591": {
      "op": "ADD"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "PUSH32",
      "value": "0x5375626A65637420616E64204F626A6563742043617465676F7279206D69736D"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "628": {
      "op": "DUP3"
    },
    "629": {
      "op": "ADD"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH5",
      "value": "0x6174636821"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "642": {
      "op": "DUP3"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "op": "SWAP1"
    },
    "649": {
      "op": "JUMP"
    },
    "650": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "651": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "653": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "654": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "DUP1",
      "path": "5"
    },
    "655": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "656": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "SUB",
      "path": "5"
    },
    "657": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "658": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1428,
        1482
      ],
      "op": "LOG1",
      "path": "5"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1504,
        1509
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "662": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        1253,
        1522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "663": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "664": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "665": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "POP",
      "path": "5"
    },
    "666": {
      "fn": "Policy3.checkPolicy",
      "offset": [
        960,
        1533
      ],
      "op": "POP",
      "path": "5"
    },
    "667": {
      "fn": "Policy3.checkPolicy",
      "jump": "o",
      "offset": [
        960,
        1533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "668": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "669": {
      "offset": [
        493,
        503
      ],
      "op": "CALLER",
      "path": "5"
    },
    "670": {
      "offset": [
        481,
        492
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "672": {
      "offset": [
        481,
        504
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "673": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "DUP2",
      "path": "5"
    },
    "674": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "675": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "677": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "DUP2",
      "path": "5"
    },
    "678": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "679": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "680": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "682": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "683": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "684": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "685": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "687": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        504
      ],
      "op": "AND",
      "path": "5"
    },
    "688": {
      "offset": [
        481,
        512
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "689": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        481,
        512
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "690": {
      "offset": [
        481,
        504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "692": {
      "offset": [
        481,
        512
      ],
      "op": "EQ",
      "path": "5"
    },
    "693": {
      "offset": [
        473,
        544
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x300"
    },
    "696": {
      "offset": [
        473,
        544
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "697": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        473,
        544
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "699": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        473,
        544
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "offset": [
        473,
        544
      ],
      "op": "DUP2",
      "path": "5"
    },
    "708": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        473,
        544
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "711": {
      "offset": [
        473,
        544
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "713": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        473,
        544
      ],
      "op": "DUP3",
      "path": "5"
    },
    "714": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        473,
        544
      ],
      "op": "ADD",
      "path": "5"
    },
    "715": {
      "op": "MSTORE"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "720": {
      "op": "DUP3"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH32",
      "value": "0x53656E646572206973206E6F7420616E20617574686F726974792E0000000000"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "offset": [
        473,
        544
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "767": {
      "op": "JUMP"
    },
    "768": {
      "offset": [
        473,
        544
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "769": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        929
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x1"
    },
    "771": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "DUP1",
      "path": "5"
    },
    "772": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "773": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        932,
        944
      ],
      "op": "DUP3",
      "path": "5"
    },
    "774": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        932,
        944
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "775": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "778": {
      "op": "NOT"
    },
    "779": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "AND",
      "path": "5"
    },
    "780": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        929
      ],
      "op": "DUP2",
      "path": "5"
    },
    "781": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        932,
        944
      ],
      "op": "DUP4",
      "path": "5"
    },
    "782": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "DUP2",
      "path": "5"
    },
    "783": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "DUP2",
      "path": "5"
    },
    "784": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "GT",
      "path": "5"
    },
    "785": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "786": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31D"
    },
    "789": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "790": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31D"
    },
    "793": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "796": {
      "fn": "Policy3.setPolicyState",
      "jump": "i",
      "offset": [
        918,
        944
      ],
      "op": "JUMP",
      "path": "5"
    },
    "797": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "798": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "MUL",
      "path": "5"
    },
    "799": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "OR",
      "path": "5"
    },
    "800": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "801": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "802": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        918,
        944
      ],
      "op": "POP",
      "path": "5"
    },
    "803": {
      "fn": "Policy3.setPolicyState",
      "offset": [
        832,
        952
      ],
      "op": "POP",
      "path": "5"
    },
    "804": {
      "fn": "Policy3.setPolicyState",
      "jump": "o",
      "offset": [
        832,
        952
      ],
      "op": "JUMP",
      "path": "5"
    },
    "805": {
      "op": "JUMPDEST"
    },
    "806": {
      "op": "DUP1"
    },
    "807": {
      "op": "CALLDATALOAD"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "810": {
      "op": "DUP2"
    },
    "811": {
      "op": "LT"
    },
    "812": {
      "op": "PUSH2",
      "value": "0x334"
    },
    "815": {
      "op": "JUMPI"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "818": {
      "op": "DUP1"
    },
    "819": {
      "op": "REVERT"
    },
    "820": {
      "op": "JUMPDEST"
    },
    "821": {
      "op": "SWAP2"
    },
    "822": {
      "op": "SWAP1"
    },
    "823": {
      "op": "POP"
    },
    "824": {
      "jump": "o",
      "op": "JUMP"
    },
    "825": {
      "op": "JUMPDEST"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "828": {
      "op": "DUP1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "831": {
      "op": "DUP4"
    },
    "832": {
      "op": "DUP6"
    },
    "833": {
      "op": "SUB"
    },
    "834": {
      "op": "SLT"
    },
    "835": {
      "op": "ISZERO"
    },
    "836": {
      "op": "PUSH2",
      "value": "0x34C"
    },
    "839": {
      "op": "JUMPI"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "842": {
      "op": "DUP1"
    },
    "843": {
      "op": "REVERT"
    },
    "844": {
      "op": "JUMPDEST"
    },
    "845": {
      "op": "PUSH2",
      "value": "0x355"
    },
    "848": {
      "op": "DUP4"
    },
    "849": {
      "op": "PUSH2",
      "value": "0x325"
    },
    "852": {
      "jump": "i",
      "op": "JUMP"
    },
    "853": {
      "op": "JUMPDEST"
    },
    "854": {
      "op": "SWAP2"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "PUSH2",
      "value": "0x363"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "861": {
      "op": "DUP5"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "op": "PUSH2",
      "value": "0x325"
    },
    "866": {
      "jump": "i",
      "op": "JUMP"
    },
    "867": {
      "op": "JUMPDEST"
    },
    "868": {
      "op": "SWAP1"
    },
    "869": {
      "op": "POP"
    },
    "870": {
      "op": "SWAP3"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "op": "SWAP3"
    },
    "873": {
      "op": "SWAP1"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "jump": "o",
      "op": "JUMP"
    },
    "876": {
      "op": "JUMPDEST"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "881": {
      "op": "DUP3"
    },
    "882": {
      "op": "DUP5"
    },
    "883": {
      "op": "SUB"
    },
    "884": {
      "op": "SLT"
    },
    "885": {
      "op": "ISZERO"
    },
    "886": {
      "op": "PUSH2",
      "value": "0x37E"
    },
    "889": {
      "op": "JUMPI"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "892": {
      "op": "DUP1"
    },
    "893": {
      "op": "REVERT"
    },
    "894": {
      "op": "JUMPDEST"
    },
    "895": {
      "op": "DUP2"
    },
    "896": {
      "op": "CALLDATALOAD"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "899": {
      "op": "DUP2"
    },
    "900": {
      "op": "LT"
    },
    "901": {
      "op": "PUSH2",
      "value": "0x38D"
    },
    "904": {
      "op": "JUMPI"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "907": {
      "op": "DUP1"
    },
    "908": {
      "op": "REVERT"
    },
    "909": {
      "op": "JUMPDEST"
    },
    "910": {
      "op": "SWAP4"
    },
    "911": {
      "op": "SWAP3"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "jump": "o",
      "op": "JUMP"
    },
    "916": {
      "op": "JUMPDEST"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "921": {
      "op": "DUP3"
    },
    "922": {
      "op": "DUP5"
    },
    "923": {
      "op": "SUB"
    },
    "924": {
      "op": "SLT"
    },
    "925": {
      "op": "ISZERO"
    },
    "926": {
      "op": "PUSH2",
      "value": "0x3A6"
    },
    "929": {
      "op": "JUMPI"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "932": {
      "op": "DUP1"
    },
    "933": {
      "op": "REVERT"
    },
    "934": {
      "op": "JUMPDEST"
    },
    "935": {
      "op": "DUP2"
    },
    "936": {
      "op": "CALLDATALOAD"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "op": "DUP2"
    },
    "946": {
      "op": "AND"
    },
    "947": {
      "op": "DUP2"
    },
    "948": {
      "op": "EQ"
    },
    "949": {
      "op": "PUSH2",
      "value": "0x38D"
    },
    "952": {
      "op": "JUMPI"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "955": {
      "op": "DUP1"
    },
    "956": {
      "op": "REVERT"
    },
    "957": {
      "op": "JUMPDEST"
    },
    "958": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "968": {
      "op": "MSTORE"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "973": {
      "op": "MSTORE"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "978": {
      "op": "REVERT"
    }
  },
  "sha1": "39b4476b1dde9d90da00abc85e575e1175503f31",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.17;\nimport \"contracts/SubjectAttribute.sol\";\nimport \"contracts/ObjectAttribute.sol\";\ncontract Policy3{\n    enum PolicyState {Active, Deactivated}\n\n    mapping(address => bool) public authorities;\n    // VARIABLES\n    PolicyState policyState;\n     //EVENTS\n    event AccessDenied( string message);\n    event AccessApproved( string message);\n    // MODIFIERS\n    modifier authorities_only(){\n        require(authorities[msg.sender] == true, \"Sender is not an authority.\");\n        _;\n    }\n    modifier onlyWhenActive(){\n        require(policyState == PolicyState.Active, \"Policy3 is not Active\");\n        _;\n    }\n    // CONSTRUCTOR\n    constructor(){\n        policyState = PolicyState.Active;\n        authorities[msg.sender] = true;\n    }\n\n    function setPolicyState(PolicyState _policyState) public authorities_only(){\n        policyState = _policyState;\n    }\n\n    function checkPolicy(Device.Category sub_category , Device.Category obj_category ) public  onlyWhenActive() returns (bool){\n        if(sub_category == Device.Category.Monitoring){\n            emit AccessApproved(\"Subject is a Monitor !\"); \n            return true;\n        }\n        else if(sub_category == obj_category ){ \n            emit AccessApproved(\"Subject and Object Category match!\"); \n        return true;\n        }\n        else{\n            emit AccessDenied( \"Subject and Object Category mismatch!\");\n            return false; \n        }\n        }\n}",
  "sourceMap": "149:1387:5:-:0;;;719:105;;;;;;;;;-1:-1:-1;743:11:5;:32;;-1:-1:-1;;743:32:5;;;;;798:10;757:18;786:23;;;;;;;;;;:30;;;;;;;;;;149:1387;;;;;;",
  "sourcePath": "contracts/Policies/Policy3.sol",
  "type": "contract"
}